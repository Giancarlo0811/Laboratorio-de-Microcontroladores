

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jul 11 16:18:09 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 22/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     000E                     	;# 
   134     000E                     	;# 
   135     000F                     	;# 
   136     0010                     	;# 
   137     0011                     	;# 
   138     0012                     	;# 
   139     0013                     	;# 
   140     0014                     	;# 
   141     0015                     	;# 
   142     0015                     	;# 
   143     0016                     	;# 
   144     0017                     	;# 
   145     0018                     	;# 
   146     0019                     	;# 
   147     001A                     	;# 
   148     001B                     	;# 
   149     001B                     	;# 
   150     001C                     	;# 
   151     001D                     	;# 
   152     001E                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     0087                     	;# 
   158     0088                     	;# 
   159     0089                     	;# 
   160     008C                     	;# 
   161     008D                     	;# 
   162     008E                     	;# 
   163     0091                     	;# 
   164     0092                     	;# 
   165     0093                     	;# 
   166     0094                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179     0000                     	;# 
   180     0001                     	;# 
   181     0002                     	;# 
   182     0003                     	;# 
   183     0004                     	;# 
   184     0005                     	;# 
   185     0006                     	;# 
   186     0007                     	;# 
   187     0008                     	;# 
   188     0009                     	;# 
   189     000A                     	;# 
   190     000B                     	;# 
   191     000C                     	;# 
   192     000D                     	;# 
   193     000E                     	;# 
   194     000E                     	;# 
   195     000F                     	;# 
   196     0010                     	;# 
   197     0011                     	;# 
   198     0012                     	;# 
   199     0013                     	;# 
   200     0014                     	;# 
   201     0015                     	;# 
   202     0015                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001B                     	;# 
   210     001C                     	;# 
   211     001D                     	;# 
   212     001E                     	;# 
   213     001F                     	;# 
   214     0081                     	;# 
   215     0085                     	;# 
   216     0086                     	;# 
   217     0087                     	;# 
   218     0088                     	;# 
   219     0089                     	;# 
   220     008C                     	;# 
   221     008D                     	;# 
   222     008E                     	;# 
   223     0091                     	;# 
   224     0092                     	;# 
   225     0093                     	;# 
   226     0094                     	;# 
   227     0098                     	;# 
   228     0099                     	;# 
   229     009C                     	;# 
   230     009D                     	;# 
   231     009E                     	;# 
   232     009F                     	;# 
   233     010C                     	;# 
   234     010D                     	;# 
   235     010E                     	;# 
   236     010F                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239     0000                     	;# 
   240     0001                     	;# 
   241     0002                     	;# 
   242     0003                     	;# 
   243     0004                     	;# 
   244     0005                     	;# 
   245     0006                     	;# 
   246     0007                     	;# 
   247     0008                     	;# 
   248     0009                     	;# 
   249     000A                     	;# 
   250     000B                     	;# 
   251     000C                     	;# 
   252     000D                     	;# 
   253     000E                     	;# 
   254     000E                     	;# 
   255     000F                     	;# 
   256     0010                     	;# 
   257     0011                     	;# 
   258     0012                     	;# 
   259     0013                     	;# 
   260     0014                     	;# 
   261     0015                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0017                     	;# 
   265     0018                     	;# 
   266     0019                     	;# 
   267     001A                     	;# 
   268     001B                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001D                     	;# 
   272     001E                     	;# 
   273     001F                     	;# 
   274     0081                     	;# 
   275     0085                     	;# 
   276     0086                     	;# 
   277     0087                     	;# 
   278     0088                     	;# 
   279     0089                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009C                     	;# 
   290     009D                     	;# 
   291     009E                     	;# 
   292     009F                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299                           
   300                           	psect	idataBANK0
   301     036A                     __pidataBANK0:
   302                           
   303                           ;initializer for _clave_enter
   304     036A  3430               	retlw	48
   305     036B  3436               	retlw	54
   306     036C  3432               	retlw	50
   307     036D  3436               	retlw	54
   308     036E  3400               	retlw	0
   309     0008                     _PORTDbits	set	8
   310     0006                     _PORTBbits	set	6
   311     0007                     _PORTCbits	set	7
   312     0088                     _TRISDbits	set	136
   313     0086                     _TRISBbits	set	134
   314     0087                     _TRISC	set	135
   315     009F                     _ADCON1bits	set	159
   316                           
   317                           	psect	strings
   318     0003                     __pstrings:
   319     0003                     stringtab:
   320     0003                     __stringtab:
   321     0003                     stringcode:	
   322                           ;	String table - string pointers are 1 byte each
   323                           
   324     0003                     stringdir:
   325     0003  3000               	movlw	high stringdir
   326     0004  008A               	movwf	10
   327     0005  0804               	movf	4,w
   328     0006  0A84               	incf	4,f
   329     0007  0782               	addwf	2,f
   330     0008                     __stringbase:
   331     0008  3400               	retlw	0
   332     0009                     __end_of__stringtab:
   333     0009                     STR_2:
   334     0009  3449               	retlw	73	;'I'
   335     000A  344E               	retlw	78	;'N'
   336     000B  3453               	retlw	83	;'S'
   337     000C  3454               	retlw	84	;'T'
   338     000D  3452               	retlw	82	;'R'
   339     000E  3455               	retlw	85	;'U'
   340     000F  344D               	retlw	77	;'M'
   341     0010  3445               	retlw	69	;'E'
   342     0011  344E               	retlw	78	;'N'
   343     0012  3454               	retlw	84	;'T'
   344     0013  3420               	retlw	32	;' '
   345     0014  3443               	retlw	67	;'C'
   346     0015  342E               	retlw	46	;'.'
   347     0016  3441               	retlw	65	;'A'
   348     0017  3400               	retlw	0
   349     0018                     STR_4:
   350     0018  3450               	retlw	80	;'P'
   351     0019  3449               	retlw	73	;'I'
   352     001A  344E               	retlw	78	;'N'
   353     001B  3420               	retlw	32	;' '
   354     001C  3449               	retlw	73	;'I'
   355     001D  344E               	retlw	78	;'N'
   356     001E  3443               	retlw	67	;'C'
   357     001F  344F               	retlw	79	;'O'
   358     0020  3452               	retlw	82	;'R'
   359     0021  3452               	retlw	82	;'R'
   360     0022  3445               	retlw	69	;'E'
   361     0023  3443               	retlw	67	;'C'
   362     0024  3454               	retlw	84	;'T'
   363     0025  344F               	retlw	79	;'O'
   364     0026  3400               	retlw	0
   365     0027                     STR_3:
   366     0027  3450               	retlw	80	;'P'
   367     0028  3449               	retlw	73	;'I'
   368     0029  344E               	retlw	78	;'N'
   369     002A  3420               	retlw	32	;' '
   370     002B  3443               	retlw	67	;'C'
   371     002C  344F               	retlw	79	;'O'
   372     002D  3452               	retlw	82	;'R'
   373     002E  3452               	retlw	82	;'R'
   374     002F  3445               	retlw	69	;'E'
   375     0030  3443               	retlw	67	;'C'
   376     0031  3454               	retlw	84	;'T'
   377     0032  3430               	retlw	48	;'0'
   378     0033  3400               	retlw	0
   379     0034                     STR_1:
   380     0034  3449               	retlw	73	;'I'
   381     0035  344E               	retlw	78	;'N'
   382     0036  3447               	retlw	71	;'G'
   383     0037  3452               	retlw	82	;'R'
   384     0038  3445               	retlw	69	;'E'
   385     0039  3453               	retlw	83	;'S'
   386     003A  3441               	retlw	65	;'A'
   387     003B  3452               	retlw	82	;'R'
   388     003C  3420               	retlw	32	;' '
   389     003D  3450               	retlw	80	;'P'
   390     003E  3449               	retlw	73	;'I'
   391     003F  344E               	retlw	78	;'N'
   392     0040  3400               	retlw	0
   393                           
   394                           	psect	cinit
   395     07D8                     start_initialization:	
   396                           ; #config settings
   397                           
   398     07D8                     __initialization:
   399                           
   400                           ; Initialize objects allocated to BANK0
   401     07D8  120A  118A  236A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   402     07DD  00A6               	movwf	__pdataBANK0& (0+127)
   403     07DE  120A  118A  236B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   404     07E3  00A7               	movwf	(__pdataBANK0+1)& (0+127)
   405     07E4  120A  118A  236C  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   406     07E9  00A8               	movwf	(__pdataBANK0+2)& (0+127)
   407     07EA  120A  118A  236D  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   408     07EF  00A9               	movwf	(__pdataBANK0+3)& (0+127)
   409     07F0  120A  118A  236E  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   410     07F5  00AA               	movwf	(__pdataBANK0+4)& (0+127)
   411                           
   412                           ; Clear objects allocated to BANK0
   413     07F6  01A0               	clrf	__pbssBANK0& (0+127)
   414     07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   415     07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   416     07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   417     07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   418     07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   419     07FC                     end_of_initialization:	
   420                           ;End of C runtime variable initialization code
   421                           
   422     07FC                     __end_of__initialization:
   423     07FC  0183               	clrf	3
   424     07FD  120A  118A  2D41   	ljmp	_main	;jump to C main() function
   425                           
   426                           	psect	bssBANK0
   427     0020                     __pbssBANK0:
   428     0020                     _tecla:
   429     0020                     	ds	1
   430     0021                     _clave:
   431     0021                     	ds	5
   432                           
   433                           	psect	dataBANK0
   434     0026                     __pdataBANK0:
   435     0026                     _clave_enter:
   436     0026                     	ds	5
   437                           
   438                           	psect	cstackCOMMON
   439     0070                     __pcstackCOMMON:
   440     0070                     ?_Keypad_Init:
   441     0070                     ??_Keypad_Init:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_Lcd_Init:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_Lcd_Write_String:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_Keypad_Get_Char:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ??_Keypad_Get_Char:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_Lcd_Write_Char:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?_Lcd_Clear:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?_main:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?_Lcd_Port:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ??_Lcd_Port:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ?_Lcd_Cmd:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ?_strcmp:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     Lcd_Port@a:	
   478                           ; 2 bytes @ 0x0
   479                           
   480     0070                     strcmp@r:	
   481                           ; 1 bytes @ 0x0
   482                           
   483                           
   484                           ; 1 bytes @ 0x0
   485     0070                     	ds	1
   486     0071                     ??_Lcd_Write_Char:
   487     0071                     ??_Lcd_Cmd:	
   488                           ; 1 bytes @ 0x1
   489                           
   490                           
   491                           ; 1 bytes @ 0x1
   492     0071                     	ds	1
   493     0072                     ??_strcmp:
   494     0072                     Lcd_Write_Char@temp:	
   495                           ; 1 bytes @ 0x2
   496                           
   497                           
   498                           ; 1 bytes @ 0x2
   499     0072                     	ds	1
   500     0073                     Lcd_Cmd@a:
   501     0073                     Lcd_Write_Char@y:	
   502                           ; 1 bytes @ 0x3
   503                           
   504                           
   505                           ; 1 bytes @ 0x3
   506     0073                     	ds	1
   507     0074                     ??_Lcd_Init:
   508     0074                     ?_Lcd_Set_Cursor:	
   509                           ; 1 bytes @ 0x4
   510                           
   511     0074                     ??_Lcd_Clear:	
   512                           ; 1 bytes @ 0x4
   513                           
   514     0074                     Lcd_Set_Cursor@b:	
   515                           ; 1 bytes @ 0x4
   516                           
   517     0074                     Lcd_Write_Char@a:	
   518                           ; 1 bytes @ 0x4
   519                           
   520     0074                     strcmp@l:	
   521                           ; 1 bytes @ 0x4
   522                           
   523                           
   524                           ; 1 bytes @ 0x4
   525     0074                     	ds	1
   526     0075                     ??_Lcd_Set_Cursor:
   527     0075                     ??_Lcd_Write_String:	
   528                           ; 1 bytes @ 0x5
   529                           
   530     0075                     Lcd_Write_String@i:	
   531                           ; 1 bytes @ 0x5
   532                           
   533                           
   534                           ; 2 bytes @ 0x5
   535     0075                     	ds	1
   536     0076                     Lcd_Set_Cursor@a:
   537                           
   538                           ; 1 bytes @ 0x6
   539     0076                     	ds	1
   540     0077                     Lcd_Set_Cursor@z:
   541     0077                     Lcd_Write_String@a:	
   542                           ; 1 bytes @ 0x7
   543                           
   544                           
   545                           ; 1 bytes @ 0x7
   546     0077                     	ds	1
   547     0078                     Lcd_Set_Cursor@y:
   548                           
   549                           ; 1 bytes @ 0x8
   550     0078                     	ds	1
   551     0079                     Lcd_Set_Cursor@temp:
   552                           
   553                           ; 1 bytes @ 0x9
   554     0079                     	ds	1
   555     007A                     ??_main:
   556                           
   557                           ; 1 bytes @ 0xA
   558     007A                     	ds	3
   559                           
   560                           	psect	cstackBANK0
   561     002B                     __pcstackBANK0:
   562     002B                     main@i:
   563                           
   564                           ; 2 bytes @ 0x0
   565     002B                     	ds	2
   566                           
   567                           	psect	maintext
   568     0541                     __pmaintext:	
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 29 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  i               2    0[BANK0 ] int 
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B00/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       2       0       0       0
   590 ;;      Temps:          3       0       0       0       0
   591 ;;      Totals:         3       2       0       0       0
   592 ;;Total ram usage:        5 bytes
   593 ;; Hardware stack levels required when called: 4
   594 ;; This function calls:
   595 ;;		_Keypad_Get_Char
   596 ;;		_Keypad_Init
   597 ;;		_Lcd_Clear
   598 ;;		_Lcd_Init
   599 ;;		_Lcd_Set_Cursor
   600 ;;		_Lcd_Write_Char
   601 ;;		_Lcd_Write_String
   602 ;;		_strcmp
   603 ;; This function is called by:
   604 ;;		Startup code after reset
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     0541                     _main:	
   609                           ;psect for function _main
   610                           
   611     0541                     l1205:	
   612                           ;incstack = 0
   613                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   614                           
   615                           
   616                           ;main.c: 30:     ADCON1bits.PCFG = 0x0F;
   617     0541  300F               	movlw	15
   618     0542  1683               	bsf	3,5	;RP0=1, select bank1
   619     0543  1303               	bcf	3,6	;RP1=0, select bank1
   620     0544  049F               	iorwf	31,f	;volatile
   621     0545                     l1207:
   622                           
   623                           ;main.c: 31:     TRISC = 0x00;
   624     0545  0187               	clrf	7	;volatile
   625     0546                     l1209:
   626                           
   627                           ;main.c: 32:     PORTCbits.RC1 = 0;
   628     0546  1283               	bcf	3,5	;RP0=0, select bank0
   629     0547  1303               	bcf	3,6	;RP1=0, select bank0
   630     0548  1087               	bcf	7,1	;volatile
   631     0549                     l1211:
   632                           
   633                           ;main.c: 33:     PORTCbits.RC0 = 0;
   634     0549  1007               	bcf	7,0	;volatile
   635     054A                     l1213:
   636                           
   637                           ;main.c: 34:     PORTCbits.RC2 = 0;
   638     054A  1107               	bcf	7,2	;volatile
   639     054B                     l1215:
   640                           
   641                           ;main.c: 35:     Keypad_Init();
   642     054B  120A  118A  236F  120A  118A  	fcall	_Keypad_Init
   643     0550                     l1217:
   644                           
   645                           ;main.c: 36:     Lcd_Init();
   646     0550  120A  118A  2449  120A  118A  	fcall	_Lcd_Init
   647     0555                     l1219:
   648                           
   649                           ;main.c: 39:         int i = 0;
   650     0555  1283               	bcf	3,5	;RP0=0, select bank0
   651     0556  1303               	bcf	3,6	;RP1=0, select bank0
   652     0557  01AB               	clrf	main@i
   653     0558  01AC               	clrf	main@i+1
   654     0559                     l1221:
   655                           
   656                           ;main.c: 40:         Lcd_Set_Cursor(1,2);
   657     0559  3002               	movlw	2
   658     055A  00F4               	movwf	Lcd_Set_Cursor@b
   659     055B  3001               	movlw	1
   660     055C  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
   661     0561                     l1223:
   662                           
   663                           ;main.c: 41:         Lcd_Write_String("INGRESAR PIN");
   664     0561  302C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   665     0562  120A  118A  23C2  120A  118A  	fcall	_Lcd_Write_String
   666                           
   667                           ;main.c: 43:         while(i < 4)
   668     0567  2D94               	goto	l1237
   669     0568                     l1225:
   670                           
   671                           ;main.c: 44:         {;main.c: 45:             tecla = Keypad_Get_Char();
   672     0568  120A  118A  2663  120A  118A  	fcall	_Keypad_Get_Char
   673     056D  1283               	bcf	3,5	;RP0=0, select bank0
   674     056E  1303               	bcf	3,6	;RP1=0, select bank0
   675     056F  00A0               	movwf	_tecla
   676     0570                     l1227:
   677                           
   678                           ;main.c: 46:             if(tecla != 0)
   679     0570  0820               	movf	_tecla,w
   680     0571  1903               	btfsc	3,2
   681     0572  2D74               	goto	u841
   682     0573  2D75               	goto	u840
   683     0574                     u841:
   684     0574  2D94               	goto	l1237
   685     0575                     u840:
   686     0575                     l1229:
   687                           
   688                           ;main.c: 47:             {;main.c: 48:                 clave[i] = tecla;
   689     0575  082B               	movf	main@i,w
   690     0576  3E21               	addlw	(low (_clave| 0))& (0+255)
   691     0577  0084               	movwf	4
   692     0578  0820               	movf	_tecla,w
   693     0579  1383               	bcf	3,7	;select IRP bank0
   694     057A  0080               	movwf	0
   695     057B                     l1231:
   696                           
   697                           ;main.c: 49:                 Lcd_Set_Cursor(2,2+i);
   698     057B  082B               	movf	main@i,w
   699     057C  3E02               	addlw	2
   700     057D  00F4               	movwf	Lcd_Set_Cursor@b
   701     057E  3002               	movlw	2
   702     057F  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
   703     0584                     l1233:
   704                           
   705                           ;main.c: 50:                 Lcd_Write_Char(tecla);
   706     0584  1283               	bcf	3,5	;RP0=0, select bank0
   707     0585  1303               	bcf	3,6	;RP1=0, select bank0
   708     0586  0820               	movf	_tecla,w
   709     0587  120A  118A  2414  120A  118A  	fcall	_Lcd_Write_Char
   710     058C                     l1235:
   711                           
   712                           ;main.c: 51:                 i++;
   713     058C  3001               	movlw	1
   714     058D  1283               	bcf	3,5	;RP0=0, select bank0
   715     058E  1303               	bcf	3,6	;RP1=0, select bank0
   716     058F  07AB               	addwf	main@i,f
   717     0590  1803               	skipnc
   718     0591  0AAC               	incf	main@i+1,f
   719     0592  3000               	movlw	0
   720     0593  07AC               	addwf	main@i+1,f
   721     0594                     l1237:
   722                           
   723                           ;main.c: 43:         while(i < 4)
   724     0594  1283               	bcf	3,5	;RP0=0, select bank0
   725     0595  1303               	bcf	3,6	;RP1=0, select bank0
   726     0596  082C               	movf	main@i+1,w
   727     0597  3A80               	xorlw	128
   728     0598  00FF               	movwf	btemp+1
   729     0599  3080               	movlw	128
   730     059A  027F               	subwf	btemp+1,w
   731     059B  1D03               	skipz
   732     059C  2D9F               	goto	u855
   733     059D  3004               	movlw	4
   734     059E  022B               	subwf	main@i,w
   735     059F                     u855:
   736     059F  1C03               	skipc
   737     05A0  2DA2               	goto	u851
   738     05A1  2DA3               	goto	u850
   739     05A2                     u851:
   740     05A2  2D68               	goto	l1225
   741     05A3                     u850:
   742     05A3                     l1239:
   743                           
   744                           ;main.c: 54:         _delay((unsigned long)((200)*(20000000/4000.0)));
   745     05A3  3006               	movlw	6
   746     05A4  00FC               	movwf	??_main+2
   747     05A5  3013               	movlw	19
   748     05A6  00FB               	movwf	??_main+1
   749     05A7  30AD               	movlw	173
   750     05A8  00FA               	movwf	??_main
   751     05A9                     u877:
   752     05A9  0BFA               	decfsz	??_main,f
   753     05AA  2DA9               	goto	u877
   754     05AB  0BFB               	decfsz	??_main+1,f
   755     05AC  2DA9               	goto	u877
   756     05AD  0BFC               	decfsz	??_main+2,f
   757     05AE  2DA9               	goto	u877
   758     05AF  2DB0               	nop2
   759     05B0                     l1241:
   760                           
   761                           ;main.c: 55:         Lcd_Clear();
   762     05B0  120A  118A  2379  120A  118A  	fcall	_Lcd_Clear
   763     05B5                     l1243:
   764                           
   765                           ;main.c: 57:         if(!strcmp(clave, clave_enter))
   766     05B5  3026               	movlw	(low (_clave_enter| 0))& (0+255)
   767     05B6  00F0               	movwf	strcmp@r
   768     05B7  3021               	movlw	(low (_clave| 0))& (0+255)
   769     05B8  120A  118A  23E7  120A  118A  	fcall	_strcmp
   770     05BD  0870               	movf	?_strcmp,w
   771     05BE  0471               	iorwf	?_strcmp+1,w
   772     05BF  1D03               	btfss	3,2
   773     05C0  2DC2               	goto	u861
   774     05C1  2DC3               	goto	u860
   775     05C2                     u861:
   776     05C2  2DF2               	goto	l40
   777     05C3                     u860:
   778     05C3                     l1245:
   779                           
   780                           ;main.c: 58:         {;main.c: 59:             PORTCbits.RC1 = 1;
   781     05C3  1283               	bcf	3,5	;RP0=0, select bank0
   782     05C4  1303               	bcf	3,6	;RP1=0, select bank0
   783     05C5  1487               	bsf	7,1	;volatile
   784                           
   785                           ;main.c: 60:             PORTCbits.RC0 = 0;
   786     05C6  1007               	bcf	7,0	;volatile
   787                           
   788                           ;main.c: 61:             PORTCbits.RC2 = 1;
   789     05C7  1507               	bsf	7,2	;volatile
   790     05C8                     l1247:
   791                           
   792                           ;main.c: 62:             Lcd_Set_Cursor(1,2);
   793     05C8  3002               	movlw	2
   794     05C9  00F4               	movwf	Lcd_Set_Cursor@b
   795     05CA  3001               	movlw	1
   796     05CB  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
   797     05D0                     l1249:
   798                           
   799                           ;main.c: 63:             Lcd_Write_String("INSTRUMENT C.A");
   800     05D0  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   801     05D1  120A  118A  23C2  120A  118A  	fcall	_Lcd_Write_String
   802     05D6                     l1251:
   803                           
   804                           ;main.c: 64:             Lcd_Set_Cursor(2,2);
   805     05D6  3002               	movlw	2
   806     05D7  00F4               	movwf	Lcd_Set_Cursor@b
   807     05D8  3002               	movlw	2
   808     05D9  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
   809                           
   810                           ;main.c: 65:             Lcd_Write_String("PIN CORRECT0");
   811     05DE  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   812     05DF  120A  118A  23C2  120A  118A  	fcall	_Lcd_Write_String
   813     05E4                     l1253:
   814                           
   815                           ;main.c: 66:             _delay((unsigned long)((2000)*(20000000/4000.0)));
   816     05E4  3033               	movlw	51
   817     05E5  00FC               	movwf	??_main+2
   818     05E6  30BB               	movlw	187
   819     05E7  00FB               	movwf	??_main+1
   820     05E8  30DF               	movlw	223
   821     05E9  00FA               	movwf	??_main
   822     05EA                     u887:
   823     05EA  0BFA               	decfsz	??_main,f
   824     05EB  2DEA               	goto	u887
   825     05EC  0BFB               	decfsz	??_main+1,f
   826     05ED  2DEA               	goto	u887
   827     05EE  0BFC               	decfsz	??_main+2,f
   828     05EF  2DEA               	goto	u887
   829     05F0  2DF1               	nop2
   830                           
   831                           ;main.c: 67:         }
   832     05F1  2E55               	goto	l1279
   833     05F2                     l40:	
   834                           ;main.c: 68:         else
   835                           
   836                           
   837                           ;main.c: 69:         {;main.c: 70:             PORTCbits.RC0 = 1;
   838     05F2  1283               	bcf	3,5	;RP0=0, select bank0
   839     05F3  1303               	bcf	3,6	;RP1=0, select bank0
   840     05F4  1407               	bsf	7,0	;volatile
   841                           
   842                           ;main.c: 71:             PORTCbits.RC1 = 0;
   843     05F5  1087               	bcf	7,1	;volatile
   844                           
   845                           ;main.c: 72:             PORTCbits.RC2 = 1;
   846     05F6  1507               	bsf	7,2	;volatile
   847     05F7                     l1255:
   848                           
   849                           ;main.c: 73:             Lcd_Set_Cursor(2,2);
   850     05F7  3002               	movlw	2
   851     05F8  00F4               	movwf	Lcd_Set_Cursor@b
   852     05F9  3002               	movlw	2
   853     05FA  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
   854     05FF                     l1257:
   855                           
   856                           ;main.c: 74:             Lcd_Write_String("PIN INCORRECTO");
   857     05FF  3010               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   858     0600  120A  118A  23C2  120A  118A  	fcall	_Lcd_Write_String
   859     0605                     l1259:
   860                           
   861                           ;main.c: 75:             _delay((unsigned long)((400)*(20000000/4000.0)));
   862     0605  300B               	movlw	11
   863     0606  00FC               	movwf	??_main+2
   864     0607  3026               	movlw	38
   865     0608  00FB               	movwf	??_main+1
   866     0609  305D               	movlw	93
   867     060A  00FA               	movwf	??_main
   868     060B                     u897:
   869     060B  0BFA               	decfsz	??_main,f
   870     060C  2E0B               	goto	u897
   871     060D  0BFB               	decfsz	??_main+1,f
   872     060E  2E0B               	goto	u897
   873     060F  0BFC               	decfsz	??_main+2,f
   874     0610  2E0B               	goto	u897
   875     0611  2E12               	nop2
   876     0612                     l1261:
   877                           
   878                           ;main.c: 76:             PORTCbits.RC2 = 0;
   879     0612  1283               	bcf	3,5	;RP0=0, select bank0
   880     0613  1303               	bcf	3,6	;RP1=0, select bank0
   881     0614  1107               	bcf	7,2	;volatile
   882     0615                     l1263:
   883                           
   884                           ;main.c: 77:             _delay((unsigned long)((400)*(20000000/4000.0)));
   885     0615  300B               	movlw	11
   886     0616  00FC               	movwf	??_main+2
   887     0617  3026               	movlw	38
   888     0618  00FB               	movwf	??_main+1
   889     0619  305D               	movlw	93
   890     061A  00FA               	movwf	??_main
   891     061B                     u907:
   892     061B  0BFA               	decfsz	??_main,f
   893     061C  2E1B               	goto	u907
   894     061D  0BFB               	decfsz	??_main+1,f
   895     061E  2E1B               	goto	u907
   896     061F  0BFC               	decfsz	??_main+2,f
   897     0620  2E1B               	goto	u907
   898     0621  2E22               	nop2
   899     0622                     l1265:
   900                           
   901                           ;main.c: 78:             PORTCbits.RC2 = 1;
   902     0622  1283               	bcf	3,5	;RP0=0, select bank0
   903     0623  1303               	bcf	3,6	;RP1=0, select bank0
   904     0624  1507               	bsf	7,2	;volatile
   905     0625                     l1267:
   906                           
   907                           ;main.c: 79:             _delay((unsigned long)((400)*(20000000/4000.0)));
   908     0625  300B               	movlw	11
   909     0626  00FC               	movwf	??_main+2
   910     0627  3026               	movlw	38
   911     0628  00FB               	movwf	??_main+1
   912     0629  305D               	movlw	93
   913     062A  00FA               	movwf	??_main
   914     062B                     u917:
   915     062B  0BFA               	decfsz	??_main,f
   916     062C  2E2B               	goto	u917
   917     062D  0BFB               	decfsz	??_main+1,f
   918     062E  2E2B               	goto	u917
   919     062F  0BFC               	decfsz	??_main+2,f
   920     0630  2E2B               	goto	u917
   921     0631  2E32               	nop2
   922     0632                     l1269:
   923                           
   924                           ;main.c: 80:             PORTCbits.RC2 = 0;
   925     0632  1283               	bcf	3,5	;RP0=0, select bank0
   926     0633  1303               	bcf	3,6	;RP1=0, select bank0
   927     0634  1107               	bcf	7,2	;volatile
   928     0635                     l1271:
   929                           
   930                           ;main.c: 81:             _delay((unsigned long)((400)*(20000000/4000.0)));
   931     0635  300B               	movlw	11
   932     0636  00FC               	movwf	??_main+2
   933     0637  3026               	movlw	38
   934     0638  00FB               	movwf	??_main+1
   935     0639  305D               	movlw	93
   936     063A  00FA               	movwf	??_main
   937     063B                     u927:
   938     063B  0BFA               	decfsz	??_main,f
   939     063C  2E3B               	goto	u927
   940     063D  0BFB               	decfsz	??_main+1,f
   941     063E  2E3B               	goto	u927
   942     063F  0BFC               	decfsz	??_main+2,f
   943     0640  2E3B               	goto	u927
   944     0641  2E42               	nop2
   945     0642                     l1273:
   946                           
   947                           ;main.c: 82:             PORTCbits.RC2 = 1;
   948     0642  1283               	bcf	3,5	;RP0=0, select bank0
   949     0643  1303               	bcf	3,6	;RP1=0, select bank0
   950     0644  1507               	bsf	7,2	;volatile
   951     0645                     l1275:
   952                           
   953                           ;main.c: 83:             _delay((unsigned long)((400)*(20000000/4000.0)));
   954     0645  300B               	movlw	11
   955     0646  00FC               	movwf	??_main+2
   956     0647  3026               	movlw	38
   957     0648  00FB               	movwf	??_main+1
   958     0649  305D               	movlw	93
   959     064A  00FA               	movwf	??_main
   960     064B                     u937:
   961     064B  0BFA               	decfsz	??_main,f
   962     064C  2E4B               	goto	u937
   963     064D  0BFB               	decfsz	??_main+1,f
   964     064E  2E4B               	goto	u937
   965     064F  0BFC               	decfsz	??_main+2,f
   966     0650  2E4B               	goto	u937
   967     0651  2E52               	nop2
   968     0652                     l1277:
   969                           
   970                           ;main.c: 84:             PORTCbits.RC2 = 0;
   971     0652  1283               	bcf	3,5	;RP0=0, select bank0
   972     0653  1303               	bcf	3,6	;RP1=0, select bank0
   973     0654  1107               	bcf	7,2	;volatile
   974     0655                     l1279:
   975     0655                     l1281:
   976                           
   977                           ;main.c: 87:         PORTCbits.RC0 = 0;
   978     0655  1283               	bcf	3,5	;RP0=0, select bank0
   979     0656  1303               	bcf	3,6	;RP1=0, select bank0
   980     0657  1007               	bcf	7,0	;volatile
   981     0658                     l1283:
   982                           
   983                           ;main.c: 88:         PORTCbits.RC1 = 0;
   984     0658  1087               	bcf	7,1	;volatile
   985     0659                     l1285:
   986                           
   987                           ;main.c: 89:         PORTCbits.RC2 = 0;
   988     0659  1107               	bcf	7,2	;volatile
   989     065A                     l1287:
   990                           
   991                           ;main.c: 90:         Lcd_Clear();
   992     065A  120A  118A  2379  120A  118A  	fcall	_Lcd_Clear
   993     065F  2D55               	goto	l1219
   994     0660  120A  118A  2800   	ljmp	start
   995     0663                     __end_of_main:
   996                           
   997                           	psect	text1
   998     03E7                     __ptext1:	
   999 ;; *************** function _strcmp *****************
  1000 ;; Defined at:
  1001 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcmp.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  l               1    wreg     PTR const unsigned char 
  1004 ;;		 -> clave(5), 
  1005 ;;  r               1    0[COMMON] PTR const unsigned char 
  1006 ;;		 -> clave_enter(5), 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  l               1    4[COMMON] PTR const unsigned char 
  1009 ;;		 -> clave(5), 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  2    0[COMMON] int 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         2       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0
  1021 ;;      Temps:          2       0       0       0       0
  1022 ;;      Totals:         5       0       0       0       0
  1023 ;;Total ram usage:        5 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032     03E7                     _strcmp:	
  1033                           ;psect for function _strcmp
  1034                           
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1]
  1038                           ;strcmp@l stored from wreg
  1039     03E7  00F4               	movwf	strcmp@l
  1040     03E8                     l1191:
  1041     03E8  2BF1               	goto	l1197
  1042     03E9                     l1193:
  1043     03E9  3001               	movlw	1
  1044     03EA  00FF               	movwf	btemp+1
  1045     03EB  087F               	movf	btemp+1,w
  1046     03EC  07F4               	addwf	strcmp@l,f
  1047     03ED                     l1195:
  1048     03ED  3001               	movlw	1
  1049     03EE  00FF               	movwf	btemp+1
  1050     03EF  087F               	movf	btemp+1,w
  1051     03F0  07F0               	addwf	strcmp@r,f
  1052     03F1                     l1197:
  1053     03F1  0870               	movf	strcmp@r,w
  1054     03F2  0084               	movwf	4
  1055     03F3  1383               	bcf	3,7	;select IRP bank0
  1056     03F4  0800               	movf	0,w
  1057     03F5  00F2               	movwf	??_strcmp
  1058     03F6  0874               	movf	strcmp@l,w
  1059     03F7  0084               	movwf	4
  1060     03F8  0800               	movf	0,w
  1061     03F9  0672               	xorwf	??_strcmp,w
  1062     03FA  1D03               	skipz
  1063     03FB  2BFD               	goto	u821
  1064     03FC  2BFE               	goto	u820
  1065     03FD                     u821:
  1066     03FD  2C05               	goto	l1201
  1067     03FE                     u820:
  1068     03FE                     l1199:
  1069     03FE  0874               	movf	strcmp@l,w
  1070     03FF  0084               	movwf	4
  1071     0400  0800               	movf	0,w
  1072     0401  1D03               	btfss	3,2
  1073     0402  2C04               	goto	u831
  1074     0403  2C05               	goto	u830
  1075     0404                     u831:
  1076     0404  2BE9               	goto	l1193
  1077     0405                     u830:
  1078     0405                     l1201:
  1079     0405  0870               	movf	strcmp@r,w
  1080     0406  0084               	movwf	4
  1081     0407  0800               	movf	0,w
  1082     0408  00F2               	movwf	??_strcmp
  1083     0409  0874               	movf	strcmp@l,w
  1084     040A  0084               	movwf	4
  1085     040B  0800               	movf	0,w
  1086     040C  00F3               	movwf	??_strcmp+1
  1087     040D  0872               	movf	??_strcmp,w
  1088     040E  0273               	subwf	??_strcmp+1,w
  1089     040F  00F0               	movwf	?_strcmp
  1090     0410  01F1               	clrf	?_strcmp+1
  1091     0411  1C03               	skipc
  1092     0412  03F1               	decf	?_strcmp+1,f
  1093     0413                     l719:
  1094     0413  0008               	return
  1095     0414                     __end_of_strcmp:
  1096                           
  1097                           	psect	text2
  1098     03C2                     __ptext2:	
  1099 ;; *************** function _Lcd_Write_String *****************
  1100 ;; Defined at:
  1101 ;;		line 104 in file "lcd.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  a               1    wreg     PTR const unsigned char 
  1104 ;;		 -> STR_4(15), STR_3(13), STR_2(15), STR_1(13), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  a               1    7[COMMON] PTR const unsigned char 
  1107 ;;		 -> STR_4(15), STR_3(13), STR_2(15), STR_1(13), 
  1108 ;;  i               2    5[COMMON] int 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         3       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0
  1121 ;;      Totals:         3       0       0       0       0
  1122 ;;Total ram usage:        3 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 2
  1125 ;; This function calls:
  1126 ;;		_Lcd_Write_Char
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132     03C2                     _Lcd_Write_String:	
  1133                           ;psect for function _Lcd_Write_String
  1134                           
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1138                           ;Lcd_Write_String@a stored from wreg
  1139     03C2  00F7               	movwf	Lcd_Write_String@a
  1140     03C3                     l1105:
  1141                           
  1142                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  1143     03C3  01F5               	clrf	Lcd_Write_String@i
  1144     03C4  01F6               	clrf	Lcd_Write_String@i+1
  1145     03C5  2BD9               	goto	l1111
  1146     03C6                     l1107:
  1147                           
  1148                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  1149     03C6  0875               	movf	Lcd_Write_String@i,w
  1150     03C7  0777               	addwf	Lcd_Write_String@a,w
  1151     03C8  0084               	movwf	4
  1152     03C9  120A  118A  2003  120A  118A  	fcall	stringdir
  1153     03CE  120A  118A  2414  120A  118A  	fcall	_Lcd_Write_Char
  1154     03D3                     l1109:
  1155     03D3  3001               	movlw	1
  1156     03D4  07F5               	addwf	Lcd_Write_String@i,f
  1157     03D5  1803               	skipnc
  1158     03D6  0AF6               	incf	Lcd_Write_String@i+1,f
  1159     03D7  3000               	movlw	0
  1160     03D8  07F6               	addwf	Lcd_Write_String@i+1,f
  1161     03D9                     l1111:
  1162     03D9  0875               	movf	Lcd_Write_String@i,w
  1163     03DA  0777               	addwf	Lcd_Write_String@a,w
  1164     03DB  0084               	movwf	4
  1165     03DC  120A  118A  2003  120A  118A  	fcall	stringdir
  1166     03E1  3A00               	xorlw	0
  1167     03E2  1D03               	skipz
  1168     03E3  2BE5               	goto	u571
  1169     03E4  2BE6               	goto	u570
  1170     03E5                     u571:
  1171     03E5  2BC6               	goto	l1107
  1172     03E6                     u570:
  1173     03E6                     l97:
  1174     03E6  0008               	return
  1175     03E7                     __end_of_Lcd_Write_String:
  1176                           
  1177                           	psect	text3
  1178     0414                     __ptext3:	
  1179 ;; *************** function _Lcd_Write_Char *****************
  1180 ;; Defined at:
  1181 ;;		line 88 in file "lcd.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  a               1    wreg     unsigned char 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  a               1    4[COMMON] unsigned char 
  1186 ;;  y               1    3[COMMON] unsigned char 
  1187 ;;  temp            1    2[COMMON] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, pclath, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         0       0       0       0       0
  1198 ;;      Locals:         3       0       0       0       0
  1199 ;;      Temps:          1       0       0       0       0
  1200 ;;      Totals:         4       0       0       0       0
  1201 ;;Total ram usage:        4 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 1
  1204 ;; This function calls:
  1205 ;;		_Lcd_Port
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;;		_Lcd_Write_String
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212     0414                     _Lcd_Write_Char:	
  1213                           ;psect for function _Lcd_Write_Char
  1214                           
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1218                           ;Lcd_Write_Char@a stored from wreg
  1219     0414  00F4               	movwf	Lcd_Write_Char@a
  1220     0415                     l1029:
  1221                           
  1222                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  1223     0415  0874               	movf	Lcd_Write_Char@a,w
  1224     0416  390F               	andlw	15
  1225     0417  00F2               	movwf	Lcd_Write_Char@temp
  1226                           
  1227                           ;lcd.c: 92:     y = a&0xF0;
  1228     0418  0874               	movf	Lcd_Write_Char@a,w
  1229     0419  39F0               	andlw	240
  1230     041A  00F3               	movwf	Lcd_Write_Char@y
  1231     041B                     l1031:
  1232                           
  1233                           ;lcd.c: 93:     PORTBbits.RB2 = 1;
  1234     041B  1283               	bcf	3,5	;RP0=0, select bank0
  1235     041C  1303               	bcf	3,6	;RP1=0, select bank0
  1236     041D  1506               	bsf	6,2	;volatile
  1237     041E                     l1033:
  1238                           
  1239                           ;lcd.c: 94:     Lcd_Port(y>>4);
  1240     041E  0873               	movf	Lcd_Write_Char@y,w
  1241     041F  00F1               	movwf	??_Lcd_Write_Char
  1242     0420  3004               	movlw	4
  1243     0421                     u485:
  1244     0421  1003               	clrc
  1245     0422  0CF1               	rrf	??_Lcd_Write_Char,f
  1246     0423  3EFF               	addlw	-1
  1247     0424  1D03               	skipz
  1248     0425  2C21               	goto	u485
  1249     0426  0871               	movf	??_Lcd_Write_Char,w
  1250     0427  120A  118A  23A0  120A  118A  	fcall	_Lcd_Port
  1251     042C                     l1035:
  1252                           
  1253                           ;lcd.c: 95:     PORTBbits.RB3 = 1;
  1254     042C  1283               	bcf	3,5	;RP0=0, select bank0
  1255     042D  1303               	bcf	3,6	;RP1=0, select bank0
  1256     042E  1586               	bsf	6,3	;volatile
  1257     042F                     l1037:
  1258                           
  1259                           ;lcd.c: 96:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  1260     042F  3042               	movlw	66
  1261     0430  00F1               	movwf	??_Lcd_Write_Char
  1262     0431                     u947:
  1263     0431  0BF1               	decfsz	??_Lcd_Write_Char,f
  1264     0432  2C31               	goto	u947
  1265     0433  0000               	nop
  1266     0434                     l1039:
  1267                           
  1268                           ;lcd.c: 97:     PORTBbits.RB3 = 0;
  1269     0434  1283               	bcf	3,5	;RP0=0, select bank0
  1270     0435  1303               	bcf	3,6	;RP1=0, select bank0
  1271     0436  1186               	bcf	6,3	;volatile
  1272     0437                     l1041:
  1273                           
  1274                           ;lcd.c: 98:     Lcd_Port(temp);
  1275     0437  0872               	movf	Lcd_Write_Char@temp,w
  1276     0438  120A  118A  23A0  120A  118A  	fcall	_Lcd_Port
  1277     043D                     l1043:
  1278                           
  1279                           ;lcd.c: 99:     PORTBbits.RB3 = 1;
  1280     043D  1283               	bcf	3,5	;RP0=0, select bank0
  1281     043E  1303               	bcf	3,6	;RP1=0, select bank0
  1282     043F  1586               	bsf	6,3	;volatile
  1283     0440                     l1045:
  1284                           
  1285                           ;lcd.c: 100:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  1286     0440  3042               	movlw	66
  1287     0441  00F1               	movwf	??_Lcd_Write_Char
  1288     0442                     u957:
  1289     0442  0BF1               	decfsz	??_Lcd_Write_Char,f
  1290     0443  2C42               	goto	u957
  1291     0444  0000               	nop
  1292     0445                     l1047:
  1293                           
  1294                           ;lcd.c: 101:     PORTBbits.RB3 = 0;
  1295     0445  1283               	bcf	3,5	;RP0=0, select bank0
  1296     0446  1303               	bcf	3,6	;RP1=0, select bank0
  1297     0447  1186               	bcf	6,3	;volatile
  1298     0448                     l91:
  1299     0448  0008               	return
  1300     0449                     __end_of_Lcd_Write_Char:
  1301                           
  1302                           	psect	text4
  1303     04B4                     __ptext4:	
  1304 ;; *************** function _Lcd_Set_Cursor *****************
  1305 ;; Defined at:
  1306 ;;		line 26 in file "lcd.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  a               1    wreg     unsigned char 
  1309 ;;  b               1    4[COMMON] unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  a               1    6[COMMON] unsigned char 
  1312 ;;  temp            1    9[COMMON] unsigned char 
  1313 ;;  y               1    8[COMMON] unsigned char 
  1314 ;;  z               1    7[COMMON] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         1       0       0       0       0
  1325 ;;      Locals:         4       0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0
  1327 ;;      Totals:         6       0       0       0       0
  1328 ;;Total ram usage:        6 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; Hardware stack levels required when called: 2
  1331 ;; This function calls:
  1332 ;;		_Lcd_Cmd
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338     04B4                     _Lcd_Set_Cursor:	
  1339                           ;psect for function _Lcd_Set_Cursor
  1340                           
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1344                           ;Lcd_Set_Cursor@a stored from wreg
  1345     04B4  00F6               	movwf	Lcd_Set_Cursor@a
  1346     04B5                     l1065:
  1347                           
  1348                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  1349     04B5  0376               	decf	Lcd_Set_Cursor@a,w
  1350     04B6  1D03               	btfss	3,2
  1351     04B7  2CB9               	goto	u491
  1352     04B8  2CBA               	goto	u490
  1353     04B9                     u491:
  1354     04B9  2CD7               	goto	l1075
  1355     04BA                     u490:
  1356     04BA                     l1067:
  1357                           
  1358                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  1359     04BA  0874               	movf	Lcd_Set_Cursor@b,w
  1360     04BB  3E7F               	addlw	127
  1361     04BC  00F9               	movwf	Lcd_Set_Cursor@temp
  1362                           
  1363                           ;lcd.c: 32:         z = temp>>4;
  1364     04BD  0879               	movf	Lcd_Set_Cursor@temp,w
  1365     04BE  00F5               	movwf	??_Lcd_Set_Cursor
  1366     04BF  3004               	movlw	4
  1367     04C0                     u505:
  1368     04C0  1003               	clrc
  1369     04C1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1370     04C2  3EFF               	addlw	-1
  1371     04C3  1D03               	skipz
  1372     04C4  2CC0               	goto	u505
  1373     04C5  0875               	movf	??_Lcd_Set_Cursor,w
  1374     04C6  00F7               	movwf	Lcd_Set_Cursor@z
  1375     04C7                     l1069:
  1376                           
  1377                           ;lcd.c: 33:         y = temp & 0x0F;
  1378     04C7  0879               	movf	Lcd_Set_Cursor@temp,w
  1379     04C8  390F               	andlw	15
  1380     04C9  00F8               	movwf	Lcd_Set_Cursor@y
  1381     04CA                     l1071:
  1382                           
  1383                           ;lcd.c: 34:         Lcd_Cmd(z);
  1384     04CA  0877               	movf	Lcd_Set_Cursor@z,w
  1385     04CB  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1386     04D0                     l1073:
  1387                           
  1388                           ;lcd.c: 35:         Lcd_Cmd(y);
  1389     04D0  0878               	movf	Lcd_Set_Cursor@y,w
  1390     04D1  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1391                           
  1392                           ;lcd.c: 36:     }
  1393     04D6  2D40               	goto	l85
  1394     04D7                     l1075:
  1395     04D7  3002               	movlw	2
  1396     04D8  0676               	xorwf	Lcd_Set_Cursor@a,w
  1397     04D9  1D03               	btfss	3,2
  1398     04DA  2CDC               	goto	u511
  1399     04DB  2CDD               	goto	u510
  1400     04DC                     u511:
  1401     04DC  2CFA               	goto	l1085
  1402     04DD                     u510:
  1403     04DD                     l1077:
  1404                           
  1405                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  1406     04DD  0874               	movf	Lcd_Set_Cursor@b,w
  1407     04DE  3EBF               	addlw	191
  1408     04DF  00F9               	movwf	Lcd_Set_Cursor@temp
  1409                           
  1410                           ;lcd.c: 40:         z = temp>>4;
  1411     04E0  0879               	movf	Lcd_Set_Cursor@temp,w
  1412     04E1  00F5               	movwf	??_Lcd_Set_Cursor
  1413     04E2  3004               	movlw	4
  1414     04E3                     u525:
  1415     04E3  1003               	clrc
  1416     04E4  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1417     04E5  3EFF               	addlw	-1
  1418     04E6  1D03               	skipz
  1419     04E7  2CE3               	goto	u525
  1420     04E8  0875               	movf	??_Lcd_Set_Cursor,w
  1421     04E9  00F7               	movwf	Lcd_Set_Cursor@z
  1422     04EA                     l1079:
  1423                           
  1424                           ;lcd.c: 41:         y = temp & 0x0F;
  1425     04EA  0879               	movf	Lcd_Set_Cursor@temp,w
  1426     04EB  390F               	andlw	15
  1427     04EC  00F8               	movwf	Lcd_Set_Cursor@y
  1428     04ED                     l1081:
  1429                           
  1430                           ;lcd.c: 42:         Lcd_Cmd(z);
  1431     04ED  0877               	movf	Lcd_Set_Cursor@z,w
  1432     04EE  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1433     04F3                     l1083:
  1434                           
  1435                           ;lcd.c: 43:         Lcd_Cmd(y);
  1436     04F3  0878               	movf	Lcd_Set_Cursor@y,w
  1437     04F4  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1438                           
  1439                           ;lcd.c: 44:     }
  1440     04F9  2D40               	goto	l85
  1441     04FA                     l1085:
  1442     04FA  3003               	movlw	3
  1443     04FB  0676               	xorwf	Lcd_Set_Cursor@a,w
  1444     04FC  1D03               	btfss	3,2
  1445     04FD  2CFF               	goto	u531
  1446     04FE  2D00               	goto	u530
  1447     04FF                     u531:
  1448     04FF  2D1D               	goto	l1095
  1449     0500                     u530:
  1450     0500                     l1087:
  1451                           
  1452                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  1453     0500  0874               	movf	Lcd_Set_Cursor@b,w
  1454     0501  3E93               	addlw	147
  1455     0502  00F9               	movwf	Lcd_Set_Cursor@temp
  1456                           
  1457                           ;lcd.c: 48:         z = temp>>4;
  1458     0503  0879               	movf	Lcd_Set_Cursor@temp,w
  1459     0504  00F5               	movwf	??_Lcd_Set_Cursor
  1460     0505  3004               	movlw	4
  1461     0506                     u545:
  1462     0506  1003               	clrc
  1463     0507  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1464     0508  3EFF               	addlw	-1
  1465     0509  1D03               	skipz
  1466     050A  2D06               	goto	u545
  1467     050B  0875               	movf	??_Lcd_Set_Cursor,w
  1468     050C  00F7               	movwf	Lcd_Set_Cursor@z
  1469     050D                     l1089:
  1470                           
  1471                           ;lcd.c: 49:         y = temp & 0x0F;
  1472     050D  0879               	movf	Lcd_Set_Cursor@temp,w
  1473     050E  390F               	andlw	15
  1474     050F  00F8               	movwf	Lcd_Set_Cursor@y
  1475     0510                     l1091:
  1476                           
  1477                           ;lcd.c: 50:         Lcd_Cmd(z);
  1478     0510  0877               	movf	Lcd_Set_Cursor@z,w
  1479     0511  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1480     0516                     l1093:
  1481                           
  1482                           ;lcd.c: 51:         Lcd_Cmd(y);
  1483     0516  0878               	movf	Lcd_Set_Cursor@y,w
  1484     0517  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1485                           
  1486                           ;lcd.c: 52:     }
  1487     051C  2D40               	goto	l85
  1488     051D                     l1095:
  1489     051D  3004               	movlw	4
  1490     051E  0676               	xorwf	Lcd_Set_Cursor@a,w
  1491     051F  1D03               	btfss	3,2
  1492     0520  2D22               	goto	u551
  1493     0521  2D23               	goto	u550
  1494     0522                     u551:
  1495     0522  2D40               	goto	l81
  1496     0523                     u550:
  1497     0523                     l1097:
  1498                           
  1499                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  1500     0523  0874               	movf	Lcd_Set_Cursor@b,w
  1501     0524  3ED3               	addlw	211
  1502     0525  00F9               	movwf	Lcd_Set_Cursor@temp
  1503                           
  1504                           ;lcd.c: 56:         z = temp>>4;
  1505     0526  0879               	movf	Lcd_Set_Cursor@temp,w
  1506     0527  00F5               	movwf	??_Lcd_Set_Cursor
  1507     0528  3004               	movlw	4
  1508     0529                     u565:
  1509     0529  1003               	clrc
  1510     052A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1511     052B  3EFF               	addlw	-1
  1512     052C  1D03               	skipz
  1513     052D  2D29               	goto	u565
  1514     052E  0875               	movf	??_Lcd_Set_Cursor,w
  1515     052F  00F7               	movwf	Lcd_Set_Cursor@z
  1516     0530                     l1099:
  1517                           
  1518                           ;lcd.c: 57:         y = temp & 0x0F;
  1519     0530  0879               	movf	Lcd_Set_Cursor@temp,w
  1520     0531  390F               	andlw	15
  1521     0532  00F8               	movwf	Lcd_Set_Cursor@y
  1522     0533                     l1101:
  1523                           
  1524                           ;lcd.c: 58:         Lcd_Cmd(z);
  1525     0533  0877               	movf	Lcd_Set_Cursor@z,w
  1526     0534  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1527     0539                     l1103:
  1528                           
  1529                           ;lcd.c: 59:         Lcd_Cmd(y);
  1530     0539  0878               	movf	Lcd_Set_Cursor@y,w
  1531     053A  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1532     053F  2D40               	goto	l85
  1533     0540                     l81:
  1534     0540                     l85:
  1535     0540  0008               	return
  1536     0541                     __end_of_Lcd_Set_Cursor:
  1537                           
  1538                           	psect	text5
  1539     0449                     __ptext5:	
  1540 ;; *************** function _Lcd_Init *****************
  1541 ;; Defined at:
  1542 ;;		line 63 in file "lcd.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0
  1558 ;;      Temps:          2       0       0       0       0
  1559 ;;      Totals:         2       0       0       0       0
  1560 ;;Total ram usage:        2 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 3
  1563 ;; This function calls:
  1564 ;;		_Lcd_Clear
  1565 ;;		_Lcd_Cmd
  1566 ;;		_Lcd_Port
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572     0449                     _Lcd_Init:	
  1573                           ;psect for function _Lcd_Init
  1574                           
  1575     0449                     l1053:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1578                           
  1579                           
  1580                           ;lcd.c: 65:  TRISBbits.TRISB2 = 0;
  1581     0449  1683               	bsf	3,5	;RP0=1, select bank1
  1582     044A  1303               	bcf	3,6	;RP1=0, select bank1
  1583     044B  1106               	bcf	6,2	;volatile
  1584                           
  1585                           ;lcd.c: 66:  TRISBbits.TRISB3 = 0;
  1586     044C  1186               	bcf	6,3	;volatile
  1587                           
  1588                           ;lcd.c: 67:  TRISBbits.TRISB4 = 0;
  1589     044D  1206               	bcf	6,4	;volatile
  1590                           
  1591                           ;lcd.c: 68:  TRISBbits.TRISB5 = 0;
  1592     044E  1286               	bcf	6,5	;volatile
  1593                           
  1594                           ;lcd.c: 69:  TRISBbits.TRISB6 = 0;
  1595     044F  1306               	bcf	6,6	;volatile
  1596                           
  1597                           ;lcd.c: 70:  TRISBbits.TRISB7 = 0;
  1598     0450  1386               	bcf	6,7	;volatile
  1599     0451                     l1055:
  1600                           
  1601                           ;lcd.c: 71:     Lcd_Port(0x00);
  1602     0451  3000               	movlw	0
  1603     0452  120A  118A  23A0  120A  118A  	fcall	_Lcd_Port
  1604     0457                     l1057:
  1605                           
  1606                           ;lcd.c: 72:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1607     0457  3082               	movlw	130
  1608     0458  00F5               	movwf	??_Lcd_Init+1
  1609     0459  30DD               	movlw	221
  1610     045A  00F4               	movwf	??_Lcd_Init
  1611     045B                     u967:
  1612     045B  0BF4               	decfsz	??_Lcd_Init,f
  1613     045C  2C5B               	goto	u967
  1614     045D  0BF5               	decfsz	??_Lcd_Init+1,f
  1615     045E  2C5B               	goto	u967
  1616     045F  2C60               	nop2
  1617     0460                     l1059:
  1618                           
  1619                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  1620     0460  3003               	movlw	3
  1621     0461  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1622                           
  1623                           ;lcd.c: 74:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1624     0466  3021               	movlw	33
  1625     0467  00F5               	movwf	??_Lcd_Init+1
  1626     0468  3076               	movlw	118
  1627     0469  00F4               	movwf	??_Lcd_Init
  1628     046A                     u977:
  1629     046A  0BF4               	decfsz	??_Lcd_Init,f
  1630     046B  2C6A               	goto	u977
  1631     046C  0BF5               	decfsz	??_Lcd_Init+1,f
  1632     046D  2C6A               	goto	u977
  1633     046E  0000               	nop
  1634     046F                     l1061:
  1635                           
  1636                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  1637     046F  3003               	movlw	3
  1638     0470  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1639     0475                     l1063:
  1640                           
  1641                           ;lcd.c: 76:     _delay((unsigned long)((11)*(20000000/4000.0)));
  1642     0475  3048               	movlw	72
  1643     0476  00F5               	movwf	??_Lcd_Init+1
  1644     0477  306C               	movlw	108
  1645     0478  00F4               	movwf	??_Lcd_Init
  1646     0479                     u987:
  1647     0479  0BF4               	decfsz	??_Lcd_Init,f
  1648     047A  2C79               	goto	u987
  1649     047B  0BF5               	decfsz	??_Lcd_Init+1,f
  1650     047C  2C79               	goto	u987
  1651     047D  0000               	nop
  1652                           
  1653                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  1654     047E  3003               	movlw	3
  1655     047F  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1656                           
  1657                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  1658     0484  3002               	movlw	2
  1659     0485  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1660                           
  1661                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  1662     048A  3002               	movlw	2
  1663     048B  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1664                           
  1665                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  1666     0490  3008               	movlw	8
  1667     0491  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1668                           
  1669                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  1670     0496  3000               	movlw	0
  1671     0497  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1672                           
  1673                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  1674     049C  300C               	movlw	12
  1675     049D  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1676                           
  1677                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  1678     04A2  3000               	movlw	0
  1679     04A3  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1680                           
  1681                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  1682     04A8  3006               	movlw	6
  1683     04A9  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1684                           
  1685                           ;lcd.c: 85:     Lcd_Clear();
  1686     04AE  120A  118A  2379  120A  118A  	fcall	_Lcd_Clear
  1687     04B3                     l88:
  1688     04B3  0008               	return
  1689     04B4                     __end_of_Lcd_Init:
  1690                           
  1691                           	psect	text6
  1692     0379                     __ptext6:	
  1693 ;; *************** function _Lcd_Clear *****************
  1694 ;; Defined at:
  1695 ;;		line 20 in file "lcd.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0
  1712 ;;      Totals:         0       0       0       0       0
  1713 ;;Total ram usage:        0 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 2
  1716 ;; This function calls:
  1717 ;;		_Lcd_Cmd
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;;		_Lcd_Init
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724     0379                     _Lcd_Clear:	
  1725                           ;psect for function _Lcd_Clear
  1726                           
  1727     0379                     l1049:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1730                           
  1731                           
  1732                           ;lcd.c: 22:     Lcd_Cmd(0);
  1733     0379  3000               	movlw	0
  1734     037A  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1735                           
  1736                           ;lcd.c: 23:     Lcd_Cmd(1);
  1737     037F  3001               	movlw	1
  1738     0380  120A  118A  2386  120A  118A  	fcall	_Lcd_Cmd
  1739     0385                     l75:
  1740     0385  0008               	return
  1741     0386                     __end_of_Lcd_Clear:
  1742                           
  1743                           	psect	text7
  1744     0386                     __ptext7:	
  1745 ;; *************** function _Lcd_Cmd *****************
  1746 ;; Defined at:
  1747 ;;		line 11 in file "lcd.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  a               1    wreg     unsigned char 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  a               1    3[COMMON] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         1       0       0       0       0
  1763 ;;      Temps:          2       0       0       0       0
  1764 ;;      Totals:         3       0       0       0       0
  1765 ;;Total ram usage:        3 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 1
  1768 ;; This function calls:
  1769 ;;		_Lcd_Port
  1770 ;; This function is called by:
  1771 ;;		_Lcd_Clear
  1772 ;;		_Lcd_Set_Cursor
  1773 ;;		_Lcd_Init
  1774 ;;		_Lcd_Shift_Right
  1775 ;;		_Lcd_Shift_Left
  1776 ;;		_Lcd_Blink
  1777 ;;		_Lcd_NoBlink
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781     0386                     _Lcd_Cmd:	
  1782                           ;psect for function _Lcd_Cmd
  1783                           
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1787                           ;Lcd_Cmd@a stored from wreg
  1788     0386  00F3               	movwf	Lcd_Cmd@a
  1789     0387                     l1019:
  1790                           
  1791                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTBbits.RB2 = 0;
  1792     0387  1283               	bcf	3,5	;RP0=0, select bank0
  1793     0388  1303               	bcf	3,6	;RP1=0, select bank0
  1794     0389  1106               	bcf	6,2	;volatile
  1795     038A                     l1021:
  1796                           
  1797                           ;lcd.c: 14:     Lcd_Port(a);
  1798     038A  0873               	movf	Lcd_Cmd@a,w
  1799     038B  120A  118A  23A0  120A  118A  	fcall	_Lcd_Port
  1800     0390                     l1023:
  1801                           
  1802                           ;lcd.c: 15:     PORTBbits.RB3 = 1;
  1803     0390  1283               	bcf	3,5	;RP0=0, select bank0
  1804     0391  1303               	bcf	3,6	;RP1=0, select bank0
  1805     0392  1586               	bsf	6,3	;volatile
  1806     0393                     l1025:
  1807                           
  1808                           ;lcd.c: 16:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1809     0393  301A               	movlw	26
  1810     0394  00F2               	movwf	??_Lcd_Cmd+1
  1811     0395  30F8               	movlw	248
  1812     0396  00F1               	movwf	??_Lcd_Cmd
  1813     0397                     u997:
  1814     0397  0BF1               	decfsz	??_Lcd_Cmd,f
  1815     0398  2B97               	goto	u997
  1816     0399  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1817     039A  2B97               	goto	u997
  1818     039B  0000               	nop
  1819     039C                     l1027:
  1820                           
  1821                           ;lcd.c: 17:     PORTBbits.RB3 = 0;
  1822     039C  1283               	bcf	3,5	;RP0=0, select bank0
  1823     039D  1303               	bcf	3,6	;RP1=0, select bank0
  1824     039E  1186               	bcf	6,3	;volatile
  1825     039F                     l72:
  1826     039F  0008               	return
  1827     03A0                     __end_of_Lcd_Cmd:
  1828                           
  1829                           	psect	text8
  1830     03A0                     __ptext8:	
  1831 ;; *************** function _Lcd_Port *****************
  1832 ;; Defined at:
  1833 ;;		line 3 in file "lcd.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  a               1    wreg     unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  a               1    0[COMMON] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         1       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0
  1850 ;;      Totals:         1       0       0       0       0
  1851 ;;Total ram usage:        1 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_Lcd_Cmd
  1857 ;;		_Lcd_Init
  1858 ;;		_Lcd_Write_Char
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862     03A0                     _Lcd_Port:	
  1863                           ;psect for function _Lcd_Port
  1864                           
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _Lcd_Port: [wreg]
  1868                           ;Lcd_Port@a stored from wreg
  1869     03A0  00F0               	movwf	Lcd_Port@a
  1870     03A1                     l1009:
  1871                           
  1872                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  1873     03A1  1C70               	btfss	Lcd_Port@a,0
  1874     03A2  2BA4               	goto	u441
  1875     03A3  2BA5               	goto	u440
  1876     03A4                     u441:
  1877     03A4  2BA9               	goto	l54
  1878     03A5                     u440:
  1879     03A5                     l1011:
  1880     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1881     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1882     03A7  1606               	bsf	6,4	;volatile
  1883     03A8  2BAC               	goto	l56
  1884     03A9                     l54:
  1885     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1886     03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1887     03AB  1206               	bcf	6,4	;volatile
  1888     03AC                     l56:
  1889                           
  1890                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  1891     03AC  1CF0               	btfss	Lcd_Port@a,1
  1892     03AD  2BAF               	goto	u451
  1893     03AE  2BB0               	goto	u450
  1894     03AF                     u451:
  1895     03AF  2BB2               	goto	l58
  1896     03B0                     u450:
  1897     03B0                     l1013:
  1898     03B0  1686               	bsf	6,5	;volatile
  1899     03B1  2BB3               	goto	l60
  1900     03B2                     l58:
  1901     03B2  1286               	bcf	6,5	;volatile
  1902     03B3                     l60:
  1903                           
  1904                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  1905     03B3  1D70               	btfss	Lcd_Port@a,2
  1906     03B4  2BB6               	goto	u461
  1907     03B5  2BB7               	goto	u460
  1908     03B6                     u461:
  1909     03B6  2BB9               	goto	l62
  1910     03B7                     u460:
  1911     03B7                     l1015:
  1912     03B7  1706               	bsf	6,6	;volatile
  1913     03B8  2BBA               	goto	l64
  1914     03B9                     l62:
  1915     03B9  1306               	bcf	6,6	;volatile
  1916     03BA                     l64:
  1917                           
  1918                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  1919     03BA  1DF0               	btfss	Lcd_Port@a,3
  1920     03BB  2BBD               	goto	u471
  1921     03BC  2BBE               	goto	u470
  1922     03BD                     u471:
  1923     03BD  2BC0               	goto	l66
  1924     03BE                     u470:
  1925     03BE                     l1017:
  1926     03BE  1786               	bsf	6,7	;volatile
  1927     03BF  2BC1               	goto	l69
  1928     03C0                     l66:
  1929     03C0  1386               	bcf	6,7	;volatile
  1930     03C1                     l69:
  1931     03C1  0008               	return
  1932     03C2                     __end_of_Lcd_Port:
  1933                           
  1934                           	psect	text9
  1935     036F                     __ptext9:	
  1936 ;; *************** function _Keypad_Init *****************
  1937 ;; Defined at:
  1938 ;;		line 4 in file "kbd4x3.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		None
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     036F                     _Keypad_Init:	
  1966                           ;psect for function _Keypad_Init
  1967                           
  1968     036F                     l1051:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _Keypad_Init: []
  1971                           
  1972                           
  1973                           ;kbd4x3.c: 6:     TRISDbits.TRISD4 = 1;
  1974     036F  1683               	bsf	3,5	;RP0=1, select bank1
  1975     0370  1303               	bcf	3,6	;RP1=0, select bank1
  1976     0371  1608               	bsf	8,4	;volatile
  1977                           
  1978                           ;kbd4x3.c: 7:     TRISDbits.TRISD5 = 1;
  1979     0372  1688               	bsf	8,5	;volatile
  1980                           
  1981                           ;kbd4x3.c: 8:     TRISDbits.TRISD6 = 1;
  1982     0373  1708               	bsf	8,6	;volatile
  1983                           
  1984                           ;kbd4x3.c: 9:     TRISDbits.TRISD7 = 1;
  1985     0374  1788               	bsf	8,7	;volatile
  1986                           
  1987                           ;kbd4x3.c: 10:     TRISDbits.TRISD0 = 0;
  1988     0375  1008               	bcf	8,0	;volatile
  1989                           
  1990                           ;kbd4x3.c: 11:     TRISDbits.TRISD1 = 0;
  1991     0376  1088               	bcf	8,1	;volatile
  1992                           
  1993                           ;kbd4x3.c: 12:     TRISDbits.TRISD2 = 0;
  1994     0377  1108               	bcf	8,2	;volatile
  1995     0378                     l118:
  1996     0378  0008               	return
  1997     0379                     __end_of_Keypad_Init:
  1998                           
  1999                           	psect	text10
  2000     0663                     __ptext10:	
  2001 ;; *************** function _Keypad_Get_Char *****************
  2002 ;; Defined at:
  2003 ;;		line 15 in file "kbd4x3.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      unsigned char 
  2010 ;; Registers used:
  2011 ;;		wreg
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0
  2019 ;;      Temps:          2       0       0       0       0
  2020 ;;      Totals:         2       0       0       0       0
  2021 ;;Total ram usage:        2 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030     0663                     _Keypad_Get_Char:	
  2031                           ;psect for function _Keypad_Get_Char
  2032                           
  2033     0663                     l1113:	
  2034                           ;incstack = 0
  2035                           ; Regs used in _Keypad_Get_Char: [wreg]
  2036                           
  2037                           
  2038                           ;kbd4x3.c: 17:     PORTDbits.RD0 = 1;
  2039     0663  1283               	bcf	3,5	;RP0=0, select bank0
  2040     0664  1303               	bcf	3,6	;RP1=0, select bank0
  2041     0665  1408               	bsf	8,0	;volatile
  2042                           
  2043                           ;kbd4x3.c: 18:     PORTDbits.RD1 = 0;
  2044     0666  1088               	bcf	8,1	;volatile
  2045                           
  2046                           ;kbd4x3.c: 19:     PORTDbits.RD2 = 0;
  2047     0667  1108               	bcf	8,2	;volatile
  2048                           
  2049                           ;kbd4x3.c: 20:     if(PORTDbits.RD4 == 1){
  2050     0668  1E08               	btfss	8,4	;volatile
  2051     0669  2E6B               	goto	u581
  2052     066A  2E6C               	goto	u580
  2053     066B                     u581:
  2054     066B  2E86               	goto	l121
  2055     066C                     u580:
  2056     066C                     l1115:
  2057                           
  2058                           ;kbd4x3.c: 21:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2059     066C  300D               	movlw	13
  2060     066D  00F1               	movwf	??_Keypad_Get_Char+1
  2061     066E  30FB               	movlw	251
  2062     066F  00F0               	movwf	??_Keypad_Get_Char
  2063     0670                     u1007:
  2064     0670  0BF0               	decfsz	??_Keypad_Get_Char,f
  2065     0671  2E70               	goto	u1007
  2066     0672  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2067     0673  2E70               	goto	u1007
  2068     0674  2E75               	nop2
  2069     0675                     l122:	
  2070                           ;kbd4x3.c: 22:         while(PORTDbits.RD4 == 1);
  2071                           
  2072     0675  1283               	bcf	3,5	;RP0=0, select bank0
  2073     0676  1303               	bcf	3,6	;RP1=0, select bank0
  2074     0677  1A08               	btfsc	8,4	;volatile
  2075     0678  2E7A               	goto	u591
  2076     0679  2E7B               	goto	u590
  2077     067A                     u591:
  2078     067A  2E75               	goto	l122
  2079     067B                     u590:
  2080     067B                     l1117:
  2081                           
  2082                           ;kbd4x3.c: 23:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2083     067B  3021               	movlw	33
  2084     067C  00F1               	movwf	??_Keypad_Get_Char+1
  2085     067D  3076               	movlw	118
  2086     067E  00F0               	movwf	??_Keypad_Get_Char
  2087     067F                     u1017:
  2088     067F  0BF0               	decfsz	??_Keypad_Get_Char,f
  2089     0680  2E7F               	goto	u1017
  2090     0681  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2091     0682  2E7F               	goto	u1017
  2092     0683  0000               	nop
  2093                           
  2094                           ;kbd4x3.c: 24:         return '1';
  2095     0684  3031               	movlw	49
  2096     0685  2FD7               	goto	l125
  2097     0686                     l121:	
  2098                           ;kbd4x3.c: 25:     }
  2099                           
  2100                           
  2101                           ;kbd4x3.c: 26:     if(PORTDbits.RD5 == 1){
  2102     0686  1E88               	btfss	8,5	;volatile
  2103     0687  2E89               	goto	u601
  2104     0688  2E8A               	goto	u600
  2105     0689                     u601:
  2106     0689  2EA4               	goto	l126
  2107     068A                     u600:
  2108     068A                     l1121:
  2109                           
  2110                           ;kbd4x3.c: 27:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2111     068A  300D               	movlw	13
  2112     068B  00F1               	movwf	??_Keypad_Get_Char+1
  2113     068C  30FB               	movlw	251
  2114     068D  00F0               	movwf	??_Keypad_Get_Char
  2115     068E                     u1027:
  2116     068E  0BF0               	decfsz	??_Keypad_Get_Char,f
  2117     068F  2E8E               	goto	u1027
  2118     0690  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2119     0691  2E8E               	goto	u1027
  2120     0692  2E93               	nop2
  2121     0693                     l127:	
  2122                           ;kbd4x3.c: 28:         while(PORTDbits.RD5 == 1);
  2123                           
  2124     0693  1283               	bcf	3,5	;RP0=0, select bank0
  2125     0694  1303               	bcf	3,6	;RP1=0, select bank0
  2126     0695  1A88               	btfsc	8,5	;volatile
  2127     0696  2E98               	goto	u611
  2128     0697  2E99               	goto	u610
  2129     0698                     u611:
  2130     0698  2E93               	goto	l127
  2131     0699                     u610:
  2132     0699                     l1123:
  2133                           
  2134                           ;kbd4x3.c: 29:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2135     0699  3021               	movlw	33
  2136     069A  00F1               	movwf	??_Keypad_Get_Char+1
  2137     069B  3076               	movlw	118
  2138     069C  00F0               	movwf	??_Keypad_Get_Char
  2139     069D                     u1037:
  2140     069D  0BF0               	decfsz	??_Keypad_Get_Char,f
  2141     069E  2E9D               	goto	u1037
  2142     069F  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2143     06A0  2E9D               	goto	u1037
  2144     06A1  0000               	nop
  2145                           
  2146                           ;kbd4x3.c: 30:         return '4';
  2147     06A2  3034               	movlw	52
  2148     06A3  2FD7               	goto	l125
  2149     06A4                     l126:	
  2150                           ;kbd4x3.c: 31:     }
  2151                           
  2152                           
  2153                           ;kbd4x3.c: 32:     if(PORTDbits.RD6 == 1){
  2154     06A4  1F08               	btfss	8,6	;volatile
  2155     06A5  2EA7               	goto	u621
  2156     06A6  2EA8               	goto	u620
  2157     06A7                     u621:
  2158     06A7  2EC2               	goto	l130
  2159     06A8                     u620:
  2160     06A8                     l1127:
  2161                           
  2162                           ;kbd4x3.c: 33:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2163     06A8  300D               	movlw	13
  2164     06A9  00F1               	movwf	??_Keypad_Get_Char+1
  2165     06AA  30FB               	movlw	251
  2166     06AB  00F0               	movwf	??_Keypad_Get_Char
  2167     06AC                     u1047:
  2168     06AC  0BF0               	decfsz	??_Keypad_Get_Char,f
  2169     06AD  2EAC               	goto	u1047
  2170     06AE  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2171     06AF  2EAC               	goto	u1047
  2172     06B0  2EB1               	nop2
  2173     06B1                     l131:	
  2174                           ;kbd4x3.c: 34:         while(PORTDbits.RD6 == 1);
  2175                           
  2176     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2177     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2178     06B3  1B08               	btfsc	8,6	;volatile
  2179     06B4  2EB6               	goto	u631
  2180     06B5  2EB7               	goto	u630
  2181     06B6                     u631:
  2182     06B6  2EB1               	goto	l131
  2183     06B7                     u630:
  2184     06B7                     l1129:
  2185                           
  2186                           ;kbd4x3.c: 35:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2187     06B7  3021               	movlw	33
  2188     06B8  00F1               	movwf	??_Keypad_Get_Char+1
  2189     06B9  3076               	movlw	118
  2190     06BA  00F0               	movwf	??_Keypad_Get_Char
  2191     06BB                     u1057:
  2192     06BB  0BF0               	decfsz	??_Keypad_Get_Char,f
  2193     06BC  2EBB               	goto	u1057
  2194     06BD  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2195     06BE  2EBB               	goto	u1057
  2196     06BF  0000               	nop
  2197                           
  2198                           ;kbd4x3.c: 36:         return '7';
  2199     06C0  3037               	movlw	55
  2200     06C1  2FD7               	goto	l125
  2201     06C2                     l130:	
  2202                           ;kbd4x3.c: 37:     }
  2203                           
  2204                           
  2205                           ;kbd4x3.c: 38:     if(PORTDbits.RD7 == 1){
  2206     06C2  1F88               	btfss	8,7	;volatile
  2207     06C3  2EC5               	goto	u641
  2208     06C4  2EC6               	goto	u640
  2209     06C5                     u641:
  2210     06C5  2EE0               	goto	l134
  2211     06C6                     u640:
  2212     06C6                     l1133:
  2213                           
  2214                           ;kbd4x3.c: 39:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2215     06C6  300D               	movlw	13
  2216     06C7  00F1               	movwf	??_Keypad_Get_Char+1
  2217     06C8  30FB               	movlw	251
  2218     06C9  00F0               	movwf	??_Keypad_Get_Char
  2219     06CA                     u1067:
  2220     06CA  0BF0               	decfsz	??_Keypad_Get_Char,f
  2221     06CB  2ECA               	goto	u1067
  2222     06CC  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2223     06CD  2ECA               	goto	u1067
  2224     06CE  2ECF               	nop2
  2225     06CF                     l135:	
  2226                           ;kbd4x3.c: 40:         while(PORTDbits.RD7 == 1);
  2227                           
  2228     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2229     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2230     06D1  1B88               	btfsc	8,7	;volatile
  2231     06D2  2ED4               	goto	u651
  2232     06D3  2ED5               	goto	u650
  2233     06D4                     u651:
  2234     06D4  2ECF               	goto	l135
  2235     06D5                     u650:
  2236     06D5                     l1135:
  2237                           
  2238                           ;kbd4x3.c: 41:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2239     06D5  3021               	movlw	33
  2240     06D6  00F1               	movwf	??_Keypad_Get_Char+1
  2241     06D7  3076               	movlw	118
  2242     06D8  00F0               	movwf	??_Keypad_Get_Char
  2243     06D9                     u1077:
  2244     06D9  0BF0               	decfsz	??_Keypad_Get_Char,f
  2245     06DA  2ED9               	goto	u1077
  2246     06DB  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2247     06DC  2ED9               	goto	u1077
  2248     06DD  0000               	nop
  2249                           
  2250                           ;kbd4x3.c: 42:         return '*';
  2251     06DE  302A               	movlw	42
  2252     06DF  2FD7               	goto	l125
  2253     06E0                     l134:	
  2254                           ;kbd4x3.c: 43:     }
  2255                           
  2256                           
  2257                           ;kbd4x3.c: 45:     PORTDbits.RD0 = 0;
  2258     06E0  1008               	bcf	8,0	;volatile
  2259                           
  2260                           ;kbd4x3.c: 46:     PORTDbits.RD1 = 1;
  2261     06E1  1488               	bsf	8,1	;volatile
  2262                           
  2263                           ;kbd4x3.c: 47:     PORTDbits.RD2 = 0;
  2264     06E2  1108               	bcf	8,2	;volatile
  2265                           
  2266                           ;kbd4x3.c: 48:     if(PORTDbits.RD4 == 1){
  2267     06E3  1E08               	btfss	8,4	;volatile
  2268     06E4  2EE6               	goto	u661
  2269     06E5  2EE7               	goto	u660
  2270     06E6                     u661:
  2271     06E6  2F01               	goto	l138
  2272     06E7                     u660:
  2273     06E7                     l1139:
  2274                           
  2275                           ;kbd4x3.c: 49:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2276     06E7  300D               	movlw	13
  2277     06E8  00F1               	movwf	??_Keypad_Get_Char+1
  2278     06E9  30FB               	movlw	251
  2279     06EA  00F0               	movwf	??_Keypad_Get_Char
  2280     06EB                     u1087:
  2281     06EB  0BF0               	decfsz	??_Keypad_Get_Char,f
  2282     06EC  2EEB               	goto	u1087
  2283     06ED  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2284     06EE  2EEB               	goto	u1087
  2285     06EF  2EF0               	nop2
  2286     06F0                     l139:	
  2287                           ;kbd4x3.c: 50:         while(PORTDbits.RD4 == 1);
  2288                           
  2289     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2290     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2291     06F2  1A08               	btfsc	8,4	;volatile
  2292     06F3  2EF5               	goto	u671
  2293     06F4  2EF6               	goto	u670
  2294     06F5                     u671:
  2295     06F5  2EF0               	goto	l139
  2296     06F6                     u670:
  2297     06F6                     l1141:
  2298                           
  2299                           ;kbd4x3.c: 51:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2300     06F6  3021               	movlw	33
  2301     06F7  00F1               	movwf	??_Keypad_Get_Char+1
  2302     06F8  3076               	movlw	118
  2303     06F9  00F0               	movwf	??_Keypad_Get_Char
  2304     06FA                     u1097:
  2305     06FA  0BF0               	decfsz	??_Keypad_Get_Char,f
  2306     06FB  2EFA               	goto	u1097
  2307     06FC  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2308     06FD  2EFA               	goto	u1097
  2309     06FE  0000               	nop
  2310                           
  2311                           ;kbd4x3.c: 52:         return '2';
  2312     06FF  3032               	movlw	50
  2313     0700  2FD7               	goto	l125
  2314     0701                     l138:	
  2315                           ;kbd4x3.c: 53:     }
  2316                           
  2317                           
  2318                           ;kbd4x3.c: 54:     if(PORTDbits.RD5 == 1){
  2319     0701  1E88               	btfss	8,5	;volatile
  2320     0702  2F04               	goto	u681
  2321     0703  2F05               	goto	u680
  2322     0704                     u681:
  2323     0704  2F1F               	goto	l142
  2324     0705                     u680:
  2325     0705                     l1145:
  2326                           
  2327                           ;kbd4x3.c: 55:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2328     0705  300D               	movlw	13
  2329     0706  00F1               	movwf	??_Keypad_Get_Char+1
  2330     0707  30FB               	movlw	251
  2331     0708  00F0               	movwf	??_Keypad_Get_Char
  2332     0709                     u1107:
  2333     0709  0BF0               	decfsz	??_Keypad_Get_Char,f
  2334     070A  2F09               	goto	u1107
  2335     070B  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2336     070C  2F09               	goto	u1107
  2337     070D  2F0E               	nop2
  2338     070E                     l143:	
  2339                           ;kbd4x3.c: 56:         while(PORTDbits.RD5 == 1);
  2340                           
  2341     070E  1283               	bcf	3,5	;RP0=0, select bank0
  2342     070F  1303               	bcf	3,6	;RP1=0, select bank0
  2343     0710  1A88               	btfsc	8,5	;volatile
  2344     0711  2F13               	goto	u691
  2345     0712  2F14               	goto	u690
  2346     0713                     u691:
  2347     0713  2F0E               	goto	l143
  2348     0714                     u690:
  2349     0714                     l1147:
  2350                           
  2351                           ;kbd4x3.c: 57:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2352     0714  3021               	movlw	33
  2353     0715  00F1               	movwf	??_Keypad_Get_Char+1
  2354     0716  3076               	movlw	118
  2355     0717  00F0               	movwf	??_Keypad_Get_Char
  2356     0718                     u1117:
  2357     0718  0BF0               	decfsz	??_Keypad_Get_Char,f
  2358     0719  2F18               	goto	u1117
  2359     071A  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2360     071B  2F18               	goto	u1117
  2361     071C  0000               	nop
  2362                           
  2363                           ;kbd4x3.c: 58:         return '5';
  2364     071D  3035               	movlw	53
  2365     071E  2FD7               	goto	l125
  2366     071F                     l142:	
  2367                           ;kbd4x3.c: 59:     }
  2368                           
  2369                           
  2370                           ;kbd4x3.c: 60:     if(PORTDbits.RD6 == 1){
  2371     071F  1F08               	btfss	8,6	;volatile
  2372     0720  2F22               	goto	u701
  2373     0721  2F23               	goto	u700
  2374     0722                     u701:
  2375     0722  2F3D               	goto	l146
  2376     0723                     u700:
  2377     0723                     l1151:
  2378                           
  2379                           ;kbd4x3.c: 61:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2380     0723  300D               	movlw	13
  2381     0724  00F1               	movwf	??_Keypad_Get_Char+1
  2382     0725  30FB               	movlw	251
  2383     0726  00F0               	movwf	??_Keypad_Get_Char
  2384     0727                     u1127:
  2385     0727  0BF0               	decfsz	??_Keypad_Get_Char,f
  2386     0728  2F27               	goto	u1127
  2387     0729  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2388     072A  2F27               	goto	u1127
  2389     072B  2F2C               	nop2
  2390     072C                     l147:	
  2391                           ;kbd4x3.c: 62:         while(PORTDbits.RD6 == 1);
  2392                           
  2393     072C  1283               	bcf	3,5	;RP0=0, select bank0
  2394     072D  1303               	bcf	3,6	;RP1=0, select bank0
  2395     072E  1B08               	btfsc	8,6	;volatile
  2396     072F  2F31               	goto	u711
  2397     0730  2F32               	goto	u710
  2398     0731                     u711:
  2399     0731  2F2C               	goto	l147
  2400     0732                     u710:
  2401     0732                     l1153:
  2402                           
  2403                           ;kbd4x3.c: 63:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2404     0732  3021               	movlw	33
  2405     0733  00F1               	movwf	??_Keypad_Get_Char+1
  2406     0734  3076               	movlw	118
  2407     0735  00F0               	movwf	??_Keypad_Get_Char
  2408     0736                     u1137:
  2409     0736  0BF0               	decfsz	??_Keypad_Get_Char,f
  2410     0737  2F36               	goto	u1137
  2411     0738  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2412     0739  2F36               	goto	u1137
  2413     073A  0000               	nop
  2414                           
  2415                           ;kbd4x3.c: 64:         return '8';
  2416     073B  3038               	movlw	56
  2417     073C  2FD7               	goto	l125
  2418     073D                     l146:	
  2419                           ;kbd4x3.c: 65:     }
  2420                           
  2421                           
  2422                           ;kbd4x3.c: 66:     if(PORTDbits.RD7 == 1){
  2423     073D  1F88               	btfss	8,7	;volatile
  2424     073E  2F40               	goto	u721
  2425     073F  2F41               	goto	u720
  2426     0740                     u721:
  2427     0740  2F5B               	goto	l150
  2428     0741                     u720:
  2429     0741                     l1157:
  2430                           
  2431                           ;kbd4x3.c: 67:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2432     0741  300D               	movlw	13
  2433     0742  00F1               	movwf	??_Keypad_Get_Char+1
  2434     0743  30FB               	movlw	251
  2435     0744  00F0               	movwf	??_Keypad_Get_Char
  2436     0745                     u1147:
  2437     0745  0BF0               	decfsz	??_Keypad_Get_Char,f
  2438     0746  2F45               	goto	u1147
  2439     0747  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2440     0748  2F45               	goto	u1147
  2441     0749  2F4A               	nop2
  2442     074A                     l151:	
  2443                           ;kbd4x3.c: 68:         while(PORTDbits.RD7 == 1);
  2444                           
  2445     074A  1283               	bcf	3,5	;RP0=0, select bank0
  2446     074B  1303               	bcf	3,6	;RP1=0, select bank0
  2447     074C  1B88               	btfsc	8,7	;volatile
  2448     074D  2F4F               	goto	u731
  2449     074E  2F50               	goto	u730
  2450     074F                     u731:
  2451     074F  2F4A               	goto	l151
  2452     0750                     u730:
  2453     0750                     l1159:
  2454                           
  2455                           ;kbd4x3.c: 69:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2456     0750  3021               	movlw	33
  2457     0751  00F1               	movwf	??_Keypad_Get_Char+1
  2458     0752  3076               	movlw	118
  2459     0753  00F0               	movwf	??_Keypad_Get_Char
  2460     0754                     u1157:
  2461     0754  0BF0               	decfsz	??_Keypad_Get_Char,f
  2462     0755  2F54               	goto	u1157
  2463     0756  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2464     0757  2F54               	goto	u1157
  2465     0758  0000               	nop
  2466                           
  2467                           ;kbd4x3.c: 70:         return '0';
  2468     0759  3030               	movlw	48
  2469     075A  2FD7               	goto	l125
  2470     075B                     l150:	
  2471                           ;kbd4x3.c: 71:     }
  2472                           
  2473                           
  2474                           ;kbd4x3.c: 73:     PORTDbits.RD0 = 0;
  2475     075B  1008               	bcf	8,0	;volatile
  2476                           
  2477                           ;kbd4x3.c: 74:     PORTDbits.RD1 = 0;
  2478     075C  1088               	bcf	8,1	;volatile
  2479                           
  2480                           ;kbd4x3.c: 75:     PORTDbits.RD2 = 1;
  2481     075D  1508               	bsf	8,2	;volatile
  2482                           
  2483                           ;kbd4x3.c: 76:     if(PORTDbits.RD4 == 1){
  2484     075E  1E08               	btfss	8,4	;volatile
  2485     075F  2F61               	goto	u741
  2486     0760  2F62               	goto	u740
  2487     0761                     u741:
  2488     0761  2F7C               	goto	l154
  2489     0762                     u740:
  2490     0762                     l1163:
  2491                           
  2492                           ;kbd4x3.c: 77:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2493     0762  300D               	movlw	13
  2494     0763  00F1               	movwf	??_Keypad_Get_Char+1
  2495     0764  30FB               	movlw	251
  2496     0765  00F0               	movwf	??_Keypad_Get_Char
  2497     0766                     u1167:
  2498     0766  0BF0               	decfsz	??_Keypad_Get_Char,f
  2499     0767  2F66               	goto	u1167
  2500     0768  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2501     0769  2F66               	goto	u1167
  2502     076A  2F6B               	nop2
  2503     076B                     l155:	
  2504                           ;kbd4x3.c: 78:         while(PORTDbits.RD4 == 1);
  2505                           
  2506     076B  1283               	bcf	3,5	;RP0=0, select bank0
  2507     076C  1303               	bcf	3,6	;RP1=0, select bank0
  2508     076D  1A08               	btfsc	8,4	;volatile
  2509     076E  2F70               	goto	u751
  2510     076F  2F71               	goto	u750
  2511     0770                     u751:
  2512     0770  2F6B               	goto	l155
  2513     0771                     u750:
  2514     0771                     l1165:
  2515                           
  2516                           ;kbd4x3.c: 79:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2517     0771  3021               	movlw	33
  2518     0772  00F1               	movwf	??_Keypad_Get_Char+1
  2519     0773  3076               	movlw	118
  2520     0774  00F0               	movwf	??_Keypad_Get_Char
  2521     0775                     u1177:
  2522     0775  0BF0               	decfsz	??_Keypad_Get_Char,f
  2523     0776  2F75               	goto	u1177
  2524     0777  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2525     0778  2F75               	goto	u1177
  2526     0779  0000               	nop
  2527                           
  2528                           ;kbd4x3.c: 80:         return '3';
  2529     077A  3033               	movlw	51
  2530     077B  2FD7               	goto	l125
  2531     077C                     l154:	
  2532                           ;kbd4x3.c: 81:     }
  2533                           
  2534                           
  2535                           ;kbd4x3.c: 82:     if(PORTDbits.RD5 == 1){
  2536     077C  1E88               	btfss	8,5	;volatile
  2537     077D  2F7F               	goto	u761
  2538     077E  2F80               	goto	u760
  2539     077F                     u761:
  2540     077F  2F9A               	goto	l158
  2541     0780                     u760:
  2542     0780                     l1169:
  2543                           
  2544                           ;kbd4x3.c: 83:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2545     0780  300D               	movlw	13
  2546     0781  00F1               	movwf	??_Keypad_Get_Char+1
  2547     0782  30FB               	movlw	251
  2548     0783  00F0               	movwf	??_Keypad_Get_Char
  2549     0784                     u1187:
  2550     0784  0BF0               	decfsz	??_Keypad_Get_Char,f
  2551     0785  2F84               	goto	u1187
  2552     0786  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2553     0787  2F84               	goto	u1187
  2554     0788  2F89               	nop2
  2555     0789                     l159:	
  2556                           ;kbd4x3.c: 84:         while(PORTDbits.RD5 == 1);
  2557                           
  2558     0789  1283               	bcf	3,5	;RP0=0, select bank0
  2559     078A  1303               	bcf	3,6	;RP1=0, select bank0
  2560     078B  1A88               	btfsc	8,5	;volatile
  2561     078C  2F8E               	goto	u771
  2562     078D  2F8F               	goto	u770
  2563     078E                     u771:
  2564     078E  2F89               	goto	l159
  2565     078F                     u770:
  2566     078F                     l1171:
  2567                           
  2568                           ;kbd4x3.c: 85:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2569     078F  3021               	movlw	33
  2570     0790  00F1               	movwf	??_Keypad_Get_Char+1
  2571     0791  3076               	movlw	118
  2572     0792  00F0               	movwf	??_Keypad_Get_Char
  2573     0793                     u1197:
  2574     0793  0BF0               	decfsz	??_Keypad_Get_Char,f
  2575     0794  2F93               	goto	u1197
  2576     0795  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2577     0796  2F93               	goto	u1197
  2578     0797  0000               	nop
  2579                           
  2580                           ;kbd4x3.c: 86:         return '6';
  2581     0798  3036               	movlw	54
  2582     0799  2FD7               	goto	l125
  2583     079A                     l158:	
  2584                           ;kbd4x3.c: 87:     }
  2585                           
  2586                           
  2587                           ;kbd4x3.c: 88:     if(PORTDbits.RD6 == 1){
  2588     079A  1F08               	btfss	8,6	;volatile
  2589     079B  2F9D               	goto	u781
  2590     079C  2F9E               	goto	u780
  2591     079D                     u781:
  2592     079D  2FB8               	goto	l162
  2593     079E                     u780:
  2594     079E                     l1175:
  2595                           
  2596                           ;kbd4x3.c: 89:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2597     079E  300D               	movlw	13
  2598     079F  00F1               	movwf	??_Keypad_Get_Char+1
  2599     07A0  30FB               	movlw	251
  2600     07A1  00F0               	movwf	??_Keypad_Get_Char
  2601     07A2                     u1207:
  2602     07A2  0BF0               	decfsz	??_Keypad_Get_Char,f
  2603     07A3  2FA2               	goto	u1207
  2604     07A4  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2605     07A5  2FA2               	goto	u1207
  2606     07A6  2FA7               	nop2
  2607     07A7                     l163:	
  2608                           ;kbd4x3.c: 90:         while(PORTDbits.RD6 == 1);
  2609                           
  2610     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  2611     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2612     07A9  1B08               	btfsc	8,6	;volatile
  2613     07AA  2FAC               	goto	u791
  2614     07AB  2FAD               	goto	u790
  2615     07AC                     u791:
  2616     07AC  2FA7               	goto	l163
  2617     07AD                     u790:
  2618     07AD                     l1177:
  2619                           
  2620                           ;kbd4x3.c: 91:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2621     07AD  3021               	movlw	33
  2622     07AE  00F1               	movwf	??_Keypad_Get_Char+1
  2623     07AF  3076               	movlw	118
  2624     07B0  00F0               	movwf	??_Keypad_Get_Char
  2625     07B1                     u1217:
  2626     07B1  0BF0               	decfsz	??_Keypad_Get_Char,f
  2627     07B2  2FB1               	goto	u1217
  2628     07B3  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2629     07B4  2FB1               	goto	u1217
  2630     07B5  0000               	nop
  2631                           
  2632                           ;kbd4x3.c: 92:         return '9';
  2633     07B6  3039               	movlw	57
  2634     07B7  2FD7               	goto	l125
  2635     07B8                     l162:	
  2636                           ;kbd4x3.c: 93:     }
  2637                           
  2638                           
  2639                           ;kbd4x3.c: 94:     if(PORTDbits.RD7 == 1){
  2640     07B8  1F88               	btfss	8,7	;volatile
  2641     07B9  2FBB               	goto	u801
  2642     07BA  2FBC               	goto	u800
  2643     07BB                     u801:
  2644     07BB  2FD6               	goto	l1187
  2645     07BC                     u800:
  2646     07BC                     l1181:
  2647                           
  2648                           ;kbd4x3.c: 95:         _delay((unsigned long)((2)*(20000000/4000.0)));
  2649     07BC  300D               	movlw	13
  2650     07BD  00F1               	movwf	??_Keypad_Get_Char+1
  2651     07BE  30FB               	movlw	251
  2652     07BF  00F0               	movwf	??_Keypad_Get_Char
  2653     07C0                     u1227:
  2654     07C0  0BF0               	decfsz	??_Keypad_Get_Char,f
  2655     07C1  2FC0               	goto	u1227
  2656     07C2  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2657     07C3  2FC0               	goto	u1227
  2658     07C4  2FC5               	nop2
  2659     07C5                     l167:	
  2660                           ;kbd4x3.c: 96:         while(PORTDbits.RD7 == 1);
  2661                           
  2662     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  2663     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  2664     07C7  1B88               	btfsc	8,7	;volatile
  2665     07C8  2FCA               	goto	u811
  2666     07C9  2FCB               	goto	u810
  2667     07CA                     u811:
  2668     07CA  2FC5               	goto	l167
  2669     07CB                     u810:
  2670     07CB                     l1183:
  2671                           
  2672                           ;kbd4x3.c: 97:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2673     07CB  3021               	movlw	33
  2674     07CC  00F1               	movwf	??_Keypad_Get_Char+1
  2675     07CD  3076               	movlw	118
  2676     07CE  00F0               	movwf	??_Keypad_Get_Char
  2677     07CF                     u1237:
  2678     07CF  0BF0               	decfsz	??_Keypad_Get_Char,f
  2679     07D0  2FCF               	goto	u1237
  2680     07D1  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  2681     07D2  2FCF               	goto	u1237
  2682     07D3  0000               	nop
  2683                           
  2684                           ;kbd4x3.c: 98:         return '#';
  2685     07D4  3023               	movlw	35
  2686     07D5  2FD7               	goto	l125
  2687     07D6                     l1187:
  2688                           
  2689                           ;kbd4x3.c: 100:     return 0;
  2690     07D6  3000               	movlw	0
  2691     07D7                     l125:
  2692     07D7  0008               	return
  2693     07D8                     __end_of_Keypad_Get_Char:
  2694     007E                     btemp	set	126	;btemp
  2695     007E                     wtemp0	set	126
  2696                           
  2697                           	psect	config
  2698                           
  2699                           ;Config register CONFIG @ 0x2007
  2700                           ;	Oscillator Selection bits
  2701                           ;	FOSC = HS, HS oscillator
  2702                           ;	Watchdog Timer Enable bit
  2703                           ;	WDTE = OFF, WDT disabled
  2704                           ;	Power-up Timer Enable bit
  2705                           ;	PWRTE = ON, PWRT enabled
  2706                           ;	Brown-out Reset Enable bit
  2707                           ;	BOREN = OFF, BOR disabled
  2708                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2709                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2710                           ;	Data EEPROM Memory Code Protection bit
  2711                           ;	CPD = OFF, Data EEPROM code protection off
  2712                           ;	Flash Program Memory Write Enable bits
  2713                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2714                           ;	In-Circuit Debugger Mode bit
  2715                           ;	DEBUG = 0x1, unprogrammed default
  2716                           ;	Flash Program Memory Code Protection bit
  2717                           ;	CP = OFF, Code protection off
  2718     2007                     	org	8199
  2719     2007  3F32               	dw	16178

Data Sizes:
    Strings     56
    Constant    0
    Data        5
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      2      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[13]), STR_4(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> clave(BANK0[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> clave_enter(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2316
                                             10 COMMON     3     3      0
                                              0 BANK0      2     2      0
                    _Keypad_Get_Char
                        _Keypad_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2     221
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     400
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1030
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Get_Char                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keypad_Get_Char
   _Keypad_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       D       5       16.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jul 11 16:18:09 2024

                       pc 0002                        l40 05F2                        l60 03B3  
                      l62 03B9                        l54 03A9                        l64 03BA  
                      l56 03AC                        l72 039F                        l81 0540  
                      l66 03C0                        l58 03B2                        l75 0385  
                      l91 0448                        l69 03C1                        l85 0540  
                      l88 04B3                        l97 03E6                        fsr 0004  
                     l121 0686                       l130 06C2                       l122 0675  
                     l131 06B1                       l125 07D7                       l150 075B  
                     l142 071F                       l134 06E0                       l126 06A4  
                     l118 0378                       l151 074A                       l143 070E  
                     l135 06CF                       l127 0693                       l162 07B8  
                     l154 077C                       l146 073D                       l138 0701  
                     l163 07A7                       l155 076B                       l147 072C  
                     l139 06F0                       l158 079A                       l167 07C5  
                     l159 0789                       l719 0413                       u510 04DD  
                     u511 04DC                       u600 068A                       u440 03A5  
                     u601 0689                       u441 03A4                       u505 04C0  
                     u610 0699                       u450 03B0                       u530 0500  
                     u611 0698                       u451 03AF                       u531 04FF  
                     u700 0723                       u620 06A8                       u460 03B7  
                     u701 0722                       u621 06A7                       u461 03B6  
                     u525 04E3                       u710 0732                       u630 06B7  
                     u470 03BE                       u550 0523                       u711 0731  
                     u631 06B6                       u471 03BD                       u551 0522  
                     u800 07BC                       u720 0741                       u640 06C6  
                     u801 07BB                       u721 0740                       u641 06C5  
                     u545 0506                       u810 07CB                       u730 0750  
                     u650 06D5                       u490 04BA                       u570 03E6  
                     u811 07CA                       u731 074F                       u651 06D4  
                     u491 04B9                       u571 03E5                       u740 0762  
                     u660 06E7                       u580 066C                       u820 03FE  
                     u741 0761                       u661 06E6                       u581 066B  
                     u565 0529                       u485 0421                       u821 03FD  
                     u750 0771                       u670 06F6                       u590 067B  
                     u830 0405                       u751 0770                       u671 06F5  
                     u591 067A                       u831 0404                       u760 0780  
                     u680 0705                       u840 0575                       u761 077F  
                     u681 0704                       u841 0574                       u770 078F  
                     u690 0714                       u850 05A3                       u771 078E  
                     u691 0713                       u907 061B                       u851 05A2  
                     u780 079E                       u860 05C3                       u781 079D  
                     u917 062B                       u861 05C2                       u790 07AD  
                     u791 07AC                       u927 063B                       u855 059F  
                     u937 064B                       u947 0431                       u957 0442  
                     u877 05A9                       u967 045B                       u887 05EA  
                     u977 046A                       u897 060B                       u987 0479  
                     u997 0397                       fsr0 0004                       indf 0000  
                    l1011 03A5                      l1013 03B0                      l1021 038A  
                    l1101 0533                      l1015 03B7                      l1023 0390  
                    l1103 0539                      l1031 041B                      l1111 03D9  
                    l1121 068A                      l1113 0663                      l1017 03BE  
                    l1009 03A1                      l1025 0393                      l1041 0437  
                    l1033 041E                      l1105 03C3                      l1201 0405  
                    l1123 0699                      l1115 066C                      l1051 036F  
                    l1027 039C                      l1019 0387                      l1043 043D  
                    l1035 042C                      l1107 03C6                      l1211 0549  
                    l1141 06F6                      l1133 06C6                      l1117 067B  
                    l1061 046F                      l1053 0449                      l1045 0440  
                    l1037 042F                      l1029 0415                      l1109 03D3  
                    l1221 0559                      l1213 054A                      l1205 0541  
                    l1151 0723                      l1135 06D5                      l1127 06A8  
                    l1063 0475                      l1055 0451                      l1071 04CA  
                    l1047 0445                      l1039 0434                      l1231 057B  
                    l1223 0561                      l1215 054B                      l1207 0545  
                    l1153 0732                      l1145 0705                      l1129 06B7  
                    l1049 0379                      l1057 0457                      l1081 04ED  
                    l1073 04D0                      l1065 04B5                      l1241 05B0  
                    l1233 0584                      l1225 0568                      l1217 0550  
                    l1209 0546                      l1171 078F                      l1163 0762  
                    l1147 0714                      l1139 06E7                      l1059 0460  
                    l1091 0510                      l1083 04F3                      l1067 04BA  
                    l1075 04D7                      l1251 05D6                      l1243 05B5  
                    l1235 058C                      l1227 0570                      l1219 0555  
                    l1181 07BC                      l1165 0771                      l1157 0741  
                    l1093 0516                      l1077 04DD                      l1085 04FA  
                    l1069 04C7                      l1261 0612                      l1253 05E4  
                    l1245 05C3                      l1229 0575                      l1237 0594  
                    l1183 07CB                      l1175 079E                      l1159 0750  
                    l1087 0500                      l1095 051D                      l1079 04EA  
                    l1191 03E8                      l1271 0635                      l1263 0615  
                    l1255 05F7                      l1247 05C8                      l1239 05A3  
                    l1177 07AD                      l1169 0780                      l1097 0523  
                    l1089 050D                      l1193 03E9                      l1281 0655  
                    l1273 0642                      l1265 0622                      l1257 05FF  
                    l1249 05D0                      l1187 07D6                      l1099 0530  
                    l1195 03ED                      l1283 0658                      l1275 0645  
                    l1267 0625                      l1259 0605                      l1197 03F1  
                    l1285 0659                      l1277 0652                      l1269 0632  
                    l1199 03FE                      l1287 065A                      l1279 0655  
                    STR_1 0034                      STR_2 0009                      STR_3 0027  
                    STR_4 0018                      u1007 0670                      u1017 067F  
                    u1107 0709                      u1027 068E                      u1117 0718  
                    u1037 069D                      u1207 07A2                      u1127 0727  
                    u1047 06AC                      u1217 07B1                      u1137 0736  
                    u1057 06BB                      u1227 07C0                      u1147 0745  
                    u1067 06CA                      u1237 07CF                      u1157 0754  
                    u1077 06D9                      u1167 0766                      u1087 06EB  
                    u1177 0775                      u1097 06FA                      u1187 0784  
                    u1197 0793         ?_Lcd_Write_String 0070                      _main 0541  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 03A0                     ?_main 0070             ??_Keypad_Init 0070  
                   _TRISC 0087                     _clave 0021                     _tecla 0020  
                   main@i 002B                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 04B4          __end_of_Lcd_Port 03C2  
         __initialization 07D8              __end_of_main 0663                    ??_main 007A  
     __end_of_Keypad_Init 0379                 ??_Lcd_Cmd 0071                    _strcmp 03E7  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 0386  
          __pcstackCOMMON 0070              __pidataBANK0 036A            _Lcd_Set_Cursor 04B4  
             _Keypad_Init 036F                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
              __pbssBANK0 0020                __pmaintext 0541    __end_of_Lcd_Set_Cursor 0541  
                 ?_strcmp 0070                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
              __stringtab 0003            _Lcd_Write_Char 0414                   _Lcd_Cmd 0386  
         ?_Lcd_Set_Cursor 0074                   __ptext1 03E7                   __ptext2 03C2  
                 __ptext3 0414                   __ptext4 04B4                   __ptext5 0449  
                 __ptext6 0379                   __ptext7 0386                   __ptext8 03A0  
                 __ptext9 036F    __end_of_Lcd_Write_Char 0449      end_of_initialization 07FC  
       ??_Keypad_Get_Char 0070                 Lcd_Port@a 0070                   strcmp@l 0074  
                 strcmp@r 0070                 _PORTBbits 0006                 _PORTCbits 0007  
               _PORTDbits 0008                 _TRISBbits 0086                 _TRISDbits 0088  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077         Lcd_Write_String@i 0075  
               _Lcd_Clear 0379          _Lcd_Write_String 03C2              ?_Keypad_Init 0070  
          __end_of_strcmp 0414       start_initialization 07D8                ?_Lcd_Clear 0070  
             __pdataBANK0 0026           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
                ??_strcmp 0072                 ___latbits 0002             __pcstackBANK0 002B  
                ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0075               _clave_enter 0026  
               __pstrings 0003           _Keypad_Get_Char 0663                  Lcd_Cmd@a 0073  
             ??_Lcd_Clear 0074               __stringbase 0008                _ADCON1bits 009F  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 0449                  _Lcd_Port 03A0  
__end_of_Lcd_Write_String 03E7   __end_of_Keypad_Get_Char 07D8        __end_of__stringtab 0009  
                __ptext10 0663        Lcd_Write_Char@temp 0072                 stringcode 0003  
        ?_Keypad_Get_Char 0070        Lcd_Set_Cursor@temp 0079                  stringdir 0003  
                stringtab 0003  
