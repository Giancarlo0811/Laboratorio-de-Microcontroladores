

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jun 01 19:25:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 22/03/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232                           
   233                           	psect	idataBANK0
   234     053E                     __pidataBANK0:
   235                           
   236                           ;initializer for _display
   237     053E  343F               	retlw	63
   238     053F  3406               	retlw	6
   239     0540  345B               	retlw	91
   240     0541  344F               	retlw	79
   241     0542  3466               	retlw	102
   242     0543  346D               	retlw	109
   243     0544  347D               	retlw	125
   244     0545  3407               	retlw	7
   245     0546  347F               	retlw	127
   246     0547  346F               	retlw	111
   247     0548  3449               	retlw	73
   248     0549  3476               	retlw	118
   249     054A  3440               	retlw	64
   250                           
   251                           ;initializer for _clave
   252     054B  3430               	retlw	48
   253     054C  3438               	retlw	56
   254     054D  3431               	retlw	49
   255     054E  3431               	retlw	49
   256     054F  3400               	retlw	0
   257     0006                     _PORTBbits	set	6
   258     0008                     _PORTD	set	8
   259     0007                     _PORTCbits	set	7
   260     0086                     _TRISBbits	set	134
   261     0087                     _TRISC	set	135
   262     0088                     _TRISD	set	136
   263     009F                     _ADCON1bits	set	159
   264                           
   265                           	psect	cinit
   266     07E8                     start_initialization:	
   267                           ; #config settings
   268                           
   269     07E8                     __initialization:
   270                           
   271                           ; Initialize objects allocated to BANK0
   272     07E8  1383               	bcf	3,7	;select IRP bank0
   273     07E9  3032               	movlw	low (__pdataBANK0+18)
   274     07EA  00FD               	movwf	btemp+-1
   275     07EB  3005               	movlw	high __pidataBANK0
   276     07EC  00FE               	movwf	btemp
   277     07ED  303E               	movlw	low __pidataBANK0
   278     07EE  00FF               	movwf	btemp+1
   279     07EF  3020               	movlw	low __pdataBANK0
   280     07F0  0084               	movwf	4
   281     07F1  120A  118A  2554  120A  118A  	fcall	init_ram0
   282                           
   283                           ; Clear objects allocated to BANK0
   284     07F6  01B2               	clrf	__pbssBANK0& (0+127)
   285     07F7  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   286     07F8  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   287     07F9  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   288     07FA  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   289                           
   290                           ; Clear objects allocated to COMMON
   291     07FB  01FA               	clrf	__pbssCOMMON& (0+127)
   292     07FC                     end_of_initialization:	
   293                           ;End of C runtime variable initialization code
   294                           
   295     07FC                     __end_of__initialization:
   296     07FC  0183               	clrf	3
   297     07FD  120A  118A  2D90   	ljmp	_main	;jump to C main() function
   298                           
   299                           	psect	bssCOMMON
   300     007A                     __pbssCOMMON:
   301     007A                     _tecla:
   302     007A                     	ds	1
   303                           
   304                           	psect	bssBANK0
   305     0032                     __pbssBANK0:
   306     0032                     _claveIntroducida:
   307     0032                     	ds	5
   308                           
   309                           	psect	dataBANK0
   310     0020                     __pdataBANK0:
   311     0020                     _display:
   312     0020                     	ds	13
   313     002D                     _clave:
   314     002D                     	ds	5
   315                           
   316                           	psect	inittext
   317     0550                     init_fetch0:	
   318                           ;	Called with low address in FSR and high address in W
   319                           
   320     0550  087E               	movf	btemp,w
   321     0551  008A               	movwf	10
   322     0552  087F               	movf	btemp+1,w
   323     0553  0082               	movwf	2
   324     0554                     init_ram0:	
   325                           ;Called with:
   326                           ;	high address of idata address in btemp 
   327                           ;	low address of idata address in btemp+1 
   328                           ;	low address of data in FSR
   329                           ;	high address + 1 of data in btemp-1
   330                           
   331     0554  120A  118A  2550  120A  118A  	fcall	init_fetch0
   332     0559  0080               	movwf	0
   333     055A  0A84               	incf	4,f
   334     055B  0804               	movf	4,w
   335     055C  067D               	xorwf	btemp+-1,w
   336     055D  1903               	btfsc	3,2
   337     055E  3400               	retlw	0
   338     055F  0AFF               	incf	btemp+1,f
   339     0560  1903               	btfsc	3,2
   340     0561  0AFE               	incf	btemp,f
   341     0562  2D54               	goto	init_ram0
   342                           
   343                           	psect	cstackCOMMON
   344     0070                     __pcstackCOMMON:
   345     0070                     ?_Keypad_Init:
   346     0070                     ??_Keypad_Init:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     ?_Keypad_Get_Char:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0070                     ??_Keypad_Get_Char:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_strcmp:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     strcmp@r:	
   362                           ; 2 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366     0070                     	ds	2
   367     0072                     ??_strcmp:
   368                           
   369                           ; 1 bytes @ 0x2
   370     0072                     	ds	2
   371     0074                     strcmp@l:
   372                           
   373                           ; 1 bytes @ 0x4
   374     0074                     	ds	1
   375     0075                     ??_main:
   376                           
   377                           ; 1 bytes @ 0x5
   378     0075                     	ds	3
   379     0078                     main@i:
   380                           
   381                           ; 2 bytes @ 0x8
   382     0078                     	ds	2
   383                           
   384                           	psect	maintext
   385     0590                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 29 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  i               2    8[COMMON] int 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         2       0       0       0       0
   407 ;;      Temps:          3       0       0       0       0
   408 ;;      Totals:         5       0       0       0       0
   409 ;;Total ram usage:        5 bytes
   410 ;; Hardware stack levels required when called: 1
   411 ;; This function calls:
   412 ;;		_Keypad_Get_Char
   413 ;;		_Keypad_Init
   414 ;;		_strcmp
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420     0590                     _main:	
   421                           ;psect for function _main
   422                           
   423     0590                     l962:	
   424                           ;incstack = 0
   425                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   426                           
   427                           
   428                           ;main.c: 30:     ADCON1bits.PCFG = 0x0F;
   429     0590  300F               	movlw	15
   430     0591  1683               	bsf	3,5	;RP0=1, select bank1
   431     0592  1303               	bcf	3,6	;RP1=0, select bank1
   432     0593  049F               	iorwf	31,f	;volatile
   433     0594                     l964:
   434                           
   435                           ;main.c: 31:     TRISD = 0x00;
   436     0594  0188               	clrf	8	;volatile
   437     0595                     l966:
   438                           
   439                           ;main.c: 32:     TRISC = 0x00;
   440     0595  0187               	clrf	7	;volatile
   441     0596                     l968:
   442                           
   443                           ;main.c: 33:     PORTCbits.RC0 = 0;
   444     0596  1283               	bcf	3,5	;RP0=0, select bank0
   445     0597  1303               	bcf	3,6	;RP1=0, select bank0
   446     0598  1007               	bcf	7,0	;volatile
   447     0599                     l970:
   448                           
   449                           ;main.c: 34:     PORTCbits.RC1 = 0;
   450     0599  1087               	bcf	7,1	;volatile
   451     059A                     l972:
   452                           
   453                           ;main.c: 35:     PORTD = display[12];
   454     059A  082C               	movf	_display+12,w
   455     059B  0088               	movwf	8	;volatile
   456     059C                     l974:
   457                           
   458                           ;main.c: 36:     Keypad_Init();
   459     059C  120A  118A  2534  120A  118A  	fcall	_Keypad_Init
   460     05A1                     l976:
   461                           
   462                           ;main.c: 39:         int i = 0;
   463     05A1  01F8               	clrf	main@i
   464     05A2  01F9               	clrf	main@i+1
   465                           
   466                           ;main.c: 41:         while(i < 4) {
   467     05A3  2E26               	goto	l1014
   468     05A4                     l978:
   469                           
   470                           ;main.c: 42:             tecla = Keypad_Get_Char();
   471     05A4  120A  118A  2673  120A  118A  	fcall	_Keypad_Get_Char
   472     05A9  00FA               	movwf	_tecla
   473     05AA                     l980:
   474                           
   475                           ;main.c: 43:             if (tecla !=0) {
   476     05AA  087A               	movf	_tecla,w
   477     05AB  1903               	btfsc	3,2
   478     05AC  2DAE               	goto	u561
   479     05AD  2DAF               	goto	u560
   480     05AE                     u561:
   481     05AE  2E26               	goto	l1014
   482     05AF                     u560:
   483     05AF                     l982:
   484                           
   485                           ;main.c: 44:                 claveIntroducida[i] = tecla;
   486     05AF  0878               	movf	main@i,w
   487     05B0  3E32               	addlw	(low (_claveIntroducida| 0))& (0+255)
   488     05B1  0084               	movwf	4
   489     05B2  087A               	movf	_tecla,w
   490     05B3  1383               	bcf	3,7	;select IRP bank0
   491     05B4  0080               	movwf	0
   492                           
   493                           ;main.c: 45:                 switch(tecla) {
   494     05B5  2DF2               	goto	l1010
   495     05B6                     l984:
   496                           
   497                           ;main.c: 47:                         PORTD = display[0];
   498     05B6  1283               	bcf	3,5	;RP0=0, select bank0
   499     05B7  1303               	bcf	3,6	;RP1=0, select bank0
   500     05B8  0820               	movf	_display,w
   501     05B9  0088               	movwf	8	;volatile
   502                           
   503                           ;main.c: 48:                         break;
   504     05BA  2E20               	goto	l1012
   505     05BB                     l986:
   506                           
   507                           ;main.c: 50:                         PORTD = display[1];
   508     05BB  1283               	bcf	3,5	;RP0=0, select bank0
   509     05BC  1303               	bcf	3,6	;RP1=0, select bank0
   510     05BD  0821               	movf	_display+1,w
   511     05BE  0088               	movwf	8	;volatile
   512                           
   513                           ;main.c: 51:                         break;
   514     05BF  2E20               	goto	l1012
   515     05C0                     l988:
   516                           
   517                           ;main.c: 53:                         PORTD = display[2];
   518     05C0  1283               	bcf	3,5	;RP0=0, select bank0
   519     05C1  1303               	bcf	3,6	;RP1=0, select bank0
   520     05C2  0822               	movf	_display+2,w
   521     05C3  0088               	movwf	8	;volatile
   522                           
   523                           ;main.c: 54:                         break;
   524     05C4  2E20               	goto	l1012
   525     05C5                     l990:
   526                           
   527                           ;main.c: 56:                         PORTD = display[3];
   528     05C5  1283               	bcf	3,5	;RP0=0, select bank0
   529     05C6  1303               	bcf	3,6	;RP1=0, select bank0
   530     05C7  0823               	movf	_display+3,w
   531     05C8  0088               	movwf	8	;volatile
   532                           
   533                           ;main.c: 57:                         break;
   534     05C9  2E20               	goto	l1012
   535     05CA                     l992:
   536                           
   537                           ;main.c: 59:                         PORTD = display[4];
   538     05CA  1283               	bcf	3,5	;RP0=0, select bank0
   539     05CB  1303               	bcf	3,6	;RP1=0, select bank0
   540     05CC  0824               	movf	_display+4,w
   541     05CD  0088               	movwf	8	;volatile
   542                           
   543                           ;main.c: 60:                         break;
   544     05CE  2E20               	goto	l1012
   545     05CF                     l994:
   546                           
   547                           ;main.c: 62:                         PORTD = display[5];
   548     05CF  1283               	bcf	3,5	;RP0=0, select bank0
   549     05D0  1303               	bcf	3,6	;RP1=0, select bank0
   550     05D1  0825               	movf	_display+5,w
   551     05D2  0088               	movwf	8	;volatile
   552                           
   553                           ;main.c: 63:                         break;
   554     05D3  2E20               	goto	l1012
   555     05D4                     l996:
   556                           
   557                           ;main.c: 65:                         PORTD = display[6];
   558     05D4  1283               	bcf	3,5	;RP0=0, select bank0
   559     05D5  1303               	bcf	3,6	;RP1=0, select bank0
   560     05D6  0826               	movf	_display+6,w
   561     05D7  0088               	movwf	8	;volatile
   562                           
   563                           ;main.c: 66:                         break;
   564     05D8  2E20               	goto	l1012
   565     05D9                     l998:
   566                           
   567                           ;main.c: 68:                         PORTD = display[7];
   568     05D9  1283               	bcf	3,5	;RP0=0, select bank0
   569     05DA  1303               	bcf	3,6	;RP1=0, select bank0
   570     05DB  0827               	movf	_display+7,w
   571     05DC  0088               	movwf	8	;volatile
   572                           
   573                           ;main.c: 69:                         break;
   574     05DD  2E20               	goto	l1012
   575     05DE                     l1000:
   576                           
   577                           ;main.c: 71:                         PORTD = display[8];
   578     05DE  1283               	bcf	3,5	;RP0=0, select bank0
   579     05DF  1303               	bcf	3,6	;RP1=0, select bank0
   580     05E0  0828               	movf	_display+8,w
   581     05E1  0088               	movwf	8	;volatile
   582                           
   583                           ;main.c: 72:                         break;
   584     05E2  2E20               	goto	l1012
   585     05E3                     l1002:
   586                           
   587                           ;main.c: 74:                         PORTD = display[9];
   588     05E3  1283               	bcf	3,5	;RP0=0, select bank0
   589     05E4  1303               	bcf	3,6	;RP1=0, select bank0
   590     05E5  0829               	movf	_display+9,w
   591     05E6  0088               	movwf	8	;volatile
   592                           
   593                           ;main.c: 75:                         break;
   594     05E7  2E20               	goto	l1012
   595     05E8                     l1004:
   596                           
   597                           ;main.c: 77:                         PORTD = display[10];
   598     05E8  1283               	bcf	3,5	;RP0=0, select bank0
   599     05E9  1303               	bcf	3,6	;RP1=0, select bank0
   600     05EA  082A               	movf	_display+10,w
   601     05EB  0088               	movwf	8	;volatile
   602                           
   603                           ;main.c: 78:                         break;
   604     05EC  2E20               	goto	l1012
   605     05ED                     l1006:
   606                           
   607                           ;main.c: 80:                         PORTD = display[11];
   608     05ED  1283               	bcf	3,5	;RP0=0, select bank0
   609     05EE  1303               	bcf	3,6	;RP1=0, select bank0
   610     05EF  082B               	movf	_display+11,w
   611     05F0  0088               	movwf	8	;volatile
   612                           
   613                           ;main.c: 81:                         break;
   614     05F1  2E20               	goto	l1012
   615     05F2                     l1010:
   616     05F2  087A               	movf	_tecla,w
   617     05F3  00F5               	movwf	??_main
   618     05F4  01F6               	clrf	??_main+1
   619                           
   620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   621                           ; Switch size 1, requested type "simple"
   622                           ; Number of cases is 1, Range of values is 0 to 0
   623                           ; switch strategies available:
   624                           ; Name         Instructions Cycles
   625                           ; simple_byte            4     3 (average)
   626                           ; direct_byte           11     8 (fixed)
   627                           ; jumptable            260     6 (fixed)
   628                           ;	Chosen strategy is simple_byte
   629     05F5  0876               	movf	??_main+1,w
   630     05F6  3A00               	xorlw	0	; case 0
   631     05F7  1903               	skipnz
   632     05F8  2DFA               	goto	l1070
   633     05F9  2E20               	goto	l1012
   634     05FA                     l1070:
   635                           
   636                           ; Switch size 1, requested type "simple"
   637                           ; Number of cases is 12, Range of values is 35 to 57
   638                           ; switch strategies available:
   639                           ; Name         Instructions Cycles
   640                           ; simple_byte           37    19 (average)
   641                           ; direct_byte           80    11 (fixed)
   642                           ; jumptable            263     9 (fixed)
   643                           ;	Chosen strategy is simple_byte
   644     05FA  0875               	movf	??_main,w
   645     05FB  3A23               	xorlw	35	; case 35
   646     05FC  1903               	skipnz
   647     05FD  2DED               	goto	l1006
   648     05FE  3A09               	xorlw	9	; case 42
   649     05FF  1903               	skipnz
   650     0600  2DE8               	goto	l1004
   651     0601  3A1A               	xorlw	26	; case 48
   652     0602  1903               	skipnz
   653     0603  2DB6               	goto	l984
   654     0604  3A01               	xorlw	1	; case 49
   655     0605  1903               	skipnz
   656     0606  2DBB               	goto	l986
   657     0607  3A03               	xorlw	3	; case 50
   658     0608  1903               	skipnz
   659     0609  2DC0               	goto	l988
   660     060A  3A01               	xorlw	1	; case 51
   661     060B  1903               	skipnz
   662     060C  2DC5               	goto	l990
   663     060D  3A07               	xorlw	7	; case 52
   664     060E  1903               	skipnz
   665     060F  2DCA               	goto	l992
   666     0610  3A01               	xorlw	1	; case 53
   667     0611  1903               	skipnz
   668     0612  2DCF               	goto	l994
   669     0613  3A03               	xorlw	3	; case 54
   670     0614  1903               	skipnz
   671     0615  2DD4               	goto	l996
   672     0616  3A01               	xorlw	1	; case 55
   673     0617  1903               	skipnz
   674     0618  2DD9               	goto	l998
   675     0619  3A0F               	xorlw	15	; case 56
   676     061A  1903               	skipnz
   677     061B  2DDE               	goto	l1000
   678     061C  3A01               	xorlw	1	; case 57
   679     061D  1903               	skipnz
   680     061E  2DE3               	goto	l1002
   681     061F  2E20               	goto	l1012
   682     0620                     l1012:
   683                           
   684                           ;main.c: 83:                 i++;
   685     0620  3001               	movlw	1
   686     0621  07F8               	addwf	main@i,f
   687     0622  1803               	skipnc
   688     0623  0AF9               	incf	main@i+1,f
   689     0624  3000               	movlw	0
   690     0625  07F9               	addwf	main@i+1,f
   691     0626                     l1014:
   692                           
   693                           ;main.c: 41:         while(i < 4) {
   694     0626  0879               	movf	main@i+1,w
   695     0627  3A80               	xorlw	128
   696     0628  00FF               	movwf	btemp+1
   697     0629  3080               	movlw	128
   698     062A  027F               	subwf	btemp+1,w
   699     062B  1D03               	skipz
   700     062C  2E2F               	goto	u575
   701     062D  3004               	movlw	4
   702     062E  0278               	subwf	main@i,w
   703     062F                     u575:
   704     062F  1C03               	skipc
   705     0630  2E32               	goto	u571
   706     0631  2E33               	goto	u570
   707     0632                     u571:
   708     0632  2DA4               	goto	l978
   709     0633                     u570:
   710     0633                     l1016:
   711                           
   712                           ;main.c: 86:         _delay((unsigned long)((500)*(20000000/4000.0)));
   713     0633  300D               	movlw	13
   714     0634  00F7               	movwf	??_main+2
   715     0635  30AF               	movlw	175
   716     0636  00F6               	movwf	??_main+1
   717     0637  30B6               	movlw	182
   718     0638  00F5               	movwf	??_main
   719     0639                     u597:
   720     0639  0BF5               	decfsz	??_main,f
   721     063A  2E39               	goto	u597
   722     063B  0BF6               	decfsz	??_main+1,f
   723     063C  2E39               	goto	u597
   724     063D  0BF7               	decfsz	??_main+2,f
   725     063E  2E39               	goto	u597
   726     063F  0000               	nop
   727                           
   728                           ;main.c: 87:         PORTD = display[12];
   729     0640  1283               	bcf	3,5	;RP0=0, select bank0
   730     0641  1303               	bcf	3,6	;RP1=0, select bank0
   731     0642  082C               	movf	_display+12,w
   732     0643  0088               	movwf	8	;volatile
   733     0644                     l1018:
   734                           
   735                           ;main.c: 89:         if (!strcmp(claveIntroducida, clave)) {
   736     0644  302D               	movlw	(low (_clave| 0))& (0+255)
   737     0645  00F0               	movwf	strcmp@r
   738     0646  3032               	movlw	(low (_claveIntroducida| 0))& (0+255)
   739     0647  120A  118A  2563  120A  118A  	fcall	_strcmp
   740     064C  0870               	movf	?_strcmp,w
   741     064D  0471               	iorwf	?_strcmp+1,w
   742     064E  1D03               	btfss	3,2
   743     064F  2E51               	goto	u581
   744     0650  2E52               	goto	u580
   745     0651                     u581:
   746     0651  2E64               	goto	l50
   747     0652                     u580:
   748     0652                     l1020:
   749                           
   750                           ;main.c: 90:             PORTCbits.RC1 = 1;
   751     0652  1283               	bcf	3,5	;RP0=0, select bank0
   752     0653  1303               	bcf	3,6	;RP1=0, select bank0
   753     0654  1487               	bsf	7,1	;volatile
   754                           
   755                           ;main.c: 91:             PORTCbits.RC0 = 0;
   756     0655  1007               	bcf	7,0	;volatile
   757     0656                     l1022:
   758                           
   759                           ;main.c: 92:             _delay((unsigned long)((2000)*(20000000/4000.0)));
   760     0656  3033               	movlw	51
   761     0657  00F7               	movwf	??_main+2
   762     0658  30BB               	movlw	187
   763     0659  00F6               	movwf	??_main+1
   764     065A  30DF               	movlw	223
   765     065B  00F5               	movwf	??_main
   766     065C                     u607:
   767     065C  0BF5               	decfsz	??_main,f
   768     065D  2E5C               	goto	u607
   769     065E  0BF6               	decfsz	??_main+1,f
   770     065F  2E5C               	goto	u607
   771     0660  0BF7               	decfsz	??_main+2,f
   772     0661  2E5C               	goto	u607
   773     0662  2E63               	nop2
   774                           
   775                           ;main.c: 93:         }
   776     0663  2E69               	goto	l1026
   777     0664                     l50:	
   778                           ;main.c: 94:         else {
   779                           
   780                           
   781                           ;main.c: 95:             PORTCbits.RC0 = 1;
   782     0664  1283               	bcf	3,5	;RP0=0, select bank0
   783     0665  1303               	bcf	3,6	;RP1=0, select bank0
   784     0666  1407               	bsf	7,0	;volatile
   785                           
   786                           ;main.c: 96:             PORTCbits.RC1 = 0;
   787     0667  1087               	bcf	7,1	;volatile
   788     0668  2E56               	goto	l1022
   789     0669                     l1026:
   790     0669                     l1028:
   791                           
   792                           ;main.c: 100:         PORTCbits.RC0 = 0;
   793     0669  1283               	bcf	3,5	;RP0=0, select bank0
   794     066A  1303               	bcf	3,6	;RP1=0, select bank0
   795     066B  1007               	bcf	7,0	;volatile
   796     066C                     l1030:
   797                           
   798                           ;main.c: 101:         PORTCbits.RC1 = 0;
   799     066C  1087               	bcf	7,1	;volatile
   800     066D                     l1032:
   801                           
   802                           ;main.c: 102:         PORTD = display[12];
   803     066D  082C               	movf	_display+12,w
   804     066E  0088               	movwf	8	;volatile
   805     066F  2DA1               	goto	l976
   806     0670  120A  118A  2800   	ljmp	start
   807     0673                     __end_of_main:
   808                           
   809                           	psect	text1
   810     0563                     __ptext1:	
   811 ;; *************** function _strcmp *****************
   812 ;; Defined at:
   813 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcmp.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  l               1    wreg     PTR const unsigned char 
   816 ;;		 -> claveIntroducida(5), 
   817 ;;  r               1    0[COMMON] PTR const unsigned char 
   818 ;;		 -> clave(5), 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  l               1    4[COMMON] PTR const unsigned char 
   821 ;;		 -> claveIntroducida(5), 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  2    0[COMMON] int 
   824 ;; Registers used:
   825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         2       0       0       0       0
   832 ;;      Locals:         1       0       0       0       0
   833 ;;      Temps:          2       0       0       0       0
   834 ;;      Totals:         5       0       0       0       0
   835 ;;Total ram usage:        5 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844     0563                     _strcmp:	
   845                           ;psect for function _strcmp
   846                           
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1]
   850                           ;strcmp@l stored from wreg
   851     0563  00F4               	movwf	strcmp@l
   852     0564                     l948:
   853     0564  2D6D               	goto	l954
   854     0565                     l950:
   855     0565  3001               	movlw	1
   856     0566  00FF               	movwf	btemp+1
   857     0567  087F               	movf	btemp+1,w
   858     0568  07F4               	addwf	strcmp@l,f
   859     0569                     l952:
   860     0569  3001               	movlw	1
   861     056A  00FF               	movwf	btemp+1
   862     056B  087F               	movf	btemp+1,w
   863     056C  07F0               	addwf	strcmp@r,f
   864     056D                     l954:
   865     056D  0870               	movf	strcmp@r,w
   866     056E  0084               	movwf	4
   867     056F  1383               	bcf	3,7	;select IRP bank0
   868     0570  0800               	movf	0,w
   869     0571  00F2               	movwf	??_strcmp
   870     0572  0874               	movf	strcmp@l,w
   871     0573  0084               	movwf	4
   872     0574  0800               	movf	0,w
   873     0575  0672               	xorwf	??_strcmp,w
   874     0576  1D03               	skipz
   875     0577  2D79               	goto	u541
   876     0578  2D7A               	goto	u540
   877     0579                     u541:
   878     0579  2D81               	goto	l958
   879     057A                     u540:
   880     057A                     l956:
   881     057A  0874               	movf	strcmp@l,w
   882     057B  0084               	movwf	4
   883     057C  0800               	movf	0,w
   884     057D  1D03               	btfss	3,2
   885     057E  2D80               	goto	u551
   886     057F  2D81               	goto	u550
   887     0580                     u551:
   888     0580  2D65               	goto	l950
   889     0581                     u550:
   890     0581                     l958:
   891     0581  0870               	movf	strcmp@r,w
   892     0582  0084               	movwf	4
   893     0583  0800               	movf	0,w
   894     0584  00F2               	movwf	??_strcmp
   895     0585  0874               	movf	strcmp@l,w
   896     0586  0084               	movwf	4
   897     0587  0800               	movf	0,w
   898     0588  00F3               	movwf	??_strcmp+1
   899     0589  0872               	movf	??_strcmp,w
   900     058A  0273               	subwf	??_strcmp+1,w
   901     058B  00F0               	movwf	?_strcmp
   902     058C  01F1               	clrf	?_strcmp+1
   903     058D  1C03               	skipc
   904     058E  03F1               	decf	?_strcmp+1,f
   905     058F                     l664:
   906     058F  0008               	return
   907     0590                     __end_of_strcmp:
   908                           
   909                           	psect	text2
   910     0534                     __ptext2:	
   911 ;; *************** function _Keypad_Init *****************
   912 ;; Defined at:
   913 ;;		line 4 in file "kbd4x3.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		None
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940     0534                     _Keypad_Init:	
   941                           ;psect for function _Keypad_Init
   942                           
   943     0534                     l868:	
   944                           ;incstack = 0
   945                           ; Regs used in _Keypad_Init: []
   946                           
   947                           
   948                           ;kbd4x3.c: 6:     TRISBbits.TRISB4 = 1;
   949     0534  1683               	bsf	3,5	;RP0=1, select bank1
   950     0535  1303               	bcf	3,6	;RP1=0, select bank1
   951     0536  1606               	bsf	6,4	;volatile
   952                           
   953                           ;kbd4x3.c: 7:     TRISBbits.TRISB5 = 1;
   954     0537  1686               	bsf	6,5	;volatile
   955                           
   956                           ;kbd4x3.c: 8:     TRISBbits.TRISB6 = 1;
   957     0538  1706               	bsf	6,6	;volatile
   958                           
   959                           ;kbd4x3.c: 9:     TRISBbits.TRISB7 = 1;
   960     0539  1786               	bsf	6,7	;volatile
   961                           
   962                           ;kbd4x3.c: 10:     TRISBbits.TRISB0 = 0;
   963     053A  1006               	bcf	6,0	;volatile
   964                           
   965                           ;kbd4x3.c: 11:     TRISBbits.TRISB1 = 0;
   966     053B  1086               	bcf	6,1	;volatile
   967                           
   968                           ;kbd4x3.c: 12:     TRISBbits.TRISB2 = 0;
   969     053C  1106               	bcf	6,2	;volatile
   970     053D                     l63:
   971     053D  0008               	return
   972     053E                     __end_of_Keypad_Init:
   973                           
   974                           	psect	text3
   975     0673                     __ptext3:	
   976 ;; *************** function _Keypad_Get_Char *****************
   977 ;; Defined at:
   978 ;;		line 15 in file "kbd4x3.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      unsigned char 
   985 ;; Registers used:
   986 ;;		wreg
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          2       0       0       0       0
   995 ;;      Totals:         2       0       0       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     0673                     _Keypad_Get_Char:	
  1006                           ;psect for function _Keypad_Get_Char
  1007                           
  1008     0673                     l870:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _Keypad_Get_Char: [wreg]
  1011                           
  1012                           
  1013                           ;kbd4x3.c: 17:     PORTBbits.RB0 = 1;
  1014     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1015     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1016     0675  1406               	bsf	6,0	;volatile
  1017                           
  1018                           ;kbd4x3.c: 18:     PORTBbits.RB1 = 0;
  1019     0676  1086               	bcf	6,1	;volatile
  1020                           
  1021                           ;kbd4x3.c: 19:     PORTBbits.RB2 = 0;
  1022     0677  1106               	bcf	6,2	;volatile
  1023                           
  1024                           ;kbd4x3.c: 20:     if(PORTBbits.RB4 == 1){
  1025     0678  1E06               	btfss	6,4	;volatile
  1026     0679  2E7B               	goto	u301
  1027     067A  2E7C               	goto	u300
  1028     067B                     u301:
  1029     067B  2E96               	goto	l66
  1030     067C                     u300:
  1031     067C                     l872:
  1032                           
  1033                           ;kbd4x3.c: 21:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1034     067C  300D               	movlw	13
  1035     067D  00F1               	movwf	??_Keypad_Get_Char+1
  1036     067E  30FB               	movlw	251
  1037     067F  00F0               	movwf	??_Keypad_Get_Char
  1038     0680                     u617:
  1039     0680  0BF0               	decfsz	??_Keypad_Get_Char,f
  1040     0681  2E80               	goto	u617
  1041     0682  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1042     0683  2E80               	goto	u617
  1043     0684  2E85               	nop2
  1044     0685                     l67:	
  1045                           ;kbd4x3.c: 22:         while(PORTBbits.RB4 == 1);
  1046                           
  1047     0685  1283               	bcf	3,5	;RP0=0, select bank0
  1048     0686  1303               	bcf	3,6	;RP1=0, select bank0
  1049     0687  1A06               	btfsc	6,4	;volatile
  1050     0688  2E8A               	goto	u311
  1051     0689  2E8B               	goto	u310
  1052     068A                     u311:
  1053     068A  2E85               	goto	l67
  1054     068B                     u310:
  1055     068B                     l874:
  1056                           
  1057                           ;kbd4x3.c: 23:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1058     068B  3021               	movlw	33
  1059     068C  00F1               	movwf	??_Keypad_Get_Char+1
  1060     068D  3076               	movlw	118
  1061     068E  00F0               	movwf	??_Keypad_Get_Char
  1062     068F                     u627:
  1063     068F  0BF0               	decfsz	??_Keypad_Get_Char,f
  1064     0690  2E8F               	goto	u627
  1065     0691  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1066     0692  2E8F               	goto	u627
  1067     0693  0000               	nop
  1068                           
  1069                           ;kbd4x3.c: 24:         return '1';
  1070     0694  3031               	movlw	49
  1071     0695  2FE7               	goto	l70
  1072     0696                     l66:	
  1073                           ;kbd4x3.c: 25:     }
  1074                           
  1075                           
  1076                           ;kbd4x3.c: 26:     if(PORTBbits.RB5 == 1){
  1077     0696  1E86               	btfss	6,5	;volatile
  1078     0697  2E99               	goto	u321
  1079     0698  2E9A               	goto	u320
  1080     0699                     u321:
  1081     0699  2EB4               	goto	l71
  1082     069A                     u320:
  1083     069A                     l878:
  1084                           
  1085                           ;kbd4x3.c: 27:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1086     069A  300D               	movlw	13
  1087     069B  00F1               	movwf	??_Keypad_Get_Char+1
  1088     069C  30FB               	movlw	251
  1089     069D  00F0               	movwf	??_Keypad_Get_Char
  1090     069E                     u637:
  1091     069E  0BF0               	decfsz	??_Keypad_Get_Char,f
  1092     069F  2E9E               	goto	u637
  1093     06A0  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1094     06A1  2E9E               	goto	u637
  1095     06A2  2EA3               	nop2
  1096     06A3                     l72:	
  1097                           ;kbd4x3.c: 28:         while(PORTBbits.RB5 == 1);
  1098                           
  1099     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1100     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1101     06A5  1A86               	btfsc	6,5	;volatile
  1102     06A6  2EA8               	goto	u331
  1103     06A7  2EA9               	goto	u330
  1104     06A8                     u331:
  1105     06A8  2EA3               	goto	l72
  1106     06A9                     u330:
  1107     06A9                     l880:
  1108                           
  1109                           ;kbd4x3.c: 29:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1110     06A9  3021               	movlw	33
  1111     06AA  00F1               	movwf	??_Keypad_Get_Char+1
  1112     06AB  3076               	movlw	118
  1113     06AC  00F0               	movwf	??_Keypad_Get_Char
  1114     06AD                     u647:
  1115     06AD  0BF0               	decfsz	??_Keypad_Get_Char,f
  1116     06AE  2EAD               	goto	u647
  1117     06AF  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1118     06B0  2EAD               	goto	u647
  1119     06B1  0000               	nop
  1120                           
  1121                           ;kbd4x3.c: 30:         return '4';
  1122     06B2  3034               	movlw	52
  1123     06B3  2FE7               	goto	l70
  1124     06B4                     l71:	
  1125                           ;kbd4x3.c: 31:     }
  1126                           
  1127                           
  1128                           ;kbd4x3.c: 32:     if(PORTBbits.RB6 == 1){
  1129     06B4  1F06               	btfss	6,6	;volatile
  1130     06B5  2EB7               	goto	u341
  1131     06B6  2EB8               	goto	u340
  1132     06B7                     u341:
  1133     06B7  2ED2               	goto	l75
  1134     06B8                     u340:
  1135     06B8                     l884:
  1136                           
  1137                           ;kbd4x3.c: 33:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1138     06B8  300D               	movlw	13
  1139     06B9  00F1               	movwf	??_Keypad_Get_Char+1
  1140     06BA  30FB               	movlw	251
  1141     06BB  00F0               	movwf	??_Keypad_Get_Char
  1142     06BC                     u657:
  1143     06BC  0BF0               	decfsz	??_Keypad_Get_Char,f
  1144     06BD  2EBC               	goto	u657
  1145     06BE  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1146     06BF  2EBC               	goto	u657
  1147     06C0  2EC1               	nop2
  1148     06C1                     l76:	
  1149                           ;kbd4x3.c: 34:         while(PORTBbits.RB6 == 1);
  1150                           
  1151     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1152     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1153     06C3  1B06               	btfsc	6,6	;volatile
  1154     06C4  2EC6               	goto	u351
  1155     06C5  2EC7               	goto	u350
  1156     06C6                     u351:
  1157     06C6  2EC1               	goto	l76
  1158     06C7                     u350:
  1159     06C7                     l886:
  1160                           
  1161                           ;kbd4x3.c: 35:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1162     06C7  3021               	movlw	33
  1163     06C8  00F1               	movwf	??_Keypad_Get_Char+1
  1164     06C9  3076               	movlw	118
  1165     06CA  00F0               	movwf	??_Keypad_Get_Char
  1166     06CB                     u667:
  1167     06CB  0BF0               	decfsz	??_Keypad_Get_Char,f
  1168     06CC  2ECB               	goto	u667
  1169     06CD  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1170     06CE  2ECB               	goto	u667
  1171     06CF  0000               	nop
  1172                           
  1173                           ;kbd4x3.c: 36:         return '7';
  1174     06D0  3037               	movlw	55
  1175     06D1  2FE7               	goto	l70
  1176     06D2                     l75:	
  1177                           ;kbd4x3.c: 37:     }
  1178                           
  1179                           
  1180                           ;kbd4x3.c: 38:     if(PORTBbits.RB7 == 1){
  1181     06D2  1F86               	btfss	6,7	;volatile
  1182     06D3  2ED5               	goto	u361
  1183     06D4  2ED6               	goto	u360
  1184     06D5                     u361:
  1185     06D5  2EF0               	goto	l79
  1186     06D6                     u360:
  1187     06D6                     l890:
  1188                           
  1189                           ;kbd4x3.c: 39:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1190     06D6  300D               	movlw	13
  1191     06D7  00F1               	movwf	??_Keypad_Get_Char+1
  1192     06D8  30FB               	movlw	251
  1193     06D9  00F0               	movwf	??_Keypad_Get_Char
  1194     06DA                     u677:
  1195     06DA  0BF0               	decfsz	??_Keypad_Get_Char,f
  1196     06DB  2EDA               	goto	u677
  1197     06DC  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1198     06DD  2EDA               	goto	u677
  1199     06DE  2EDF               	nop2
  1200     06DF                     l80:	
  1201                           ;kbd4x3.c: 40:         while(PORTBbits.RB7 == 1);
  1202                           
  1203     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1204     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1205     06E1  1B86               	btfsc	6,7	;volatile
  1206     06E2  2EE4               	goto	u371
  1207     06E3  2EE5               	goto	u370
  1208     06E4                     u371:
  1209     06E4  2EDF               	goto	l80
  1210     06E5                     u370:
  1211     06E5                     l892:
  1212                           
  1213                           ;kbd4x3.c: 41:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1214     06E5  3021               	movlw	33
  1215     06E6  00F1               	movwf	??_Keypad_Get_Char+1
  1216     06E7  3076               	movlw	118
  1217     06E8  00F0               	movwf	??_Keypad_Get_Char
  1218     06E9                     u687:
  1219     06E9  0BF0               	decfsz	??_Keypad_Get_Char,f
  1220     06EA  2EE9               	goto	u687
  1221     06EB  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1222     06EC  2EE9               	goto	u687
  1223     06ED  0000               	nop
  1224                           
  1225                           ;kbd4x3.c: 42:         return '*';
  1226     06EE  302A               	movlw	42
  1227     06EF  2FE7               	goto	l70
  1228     06F0                     l79:	
  1229                           ;kbd4x3.c: 43:     }
  1230                           
  1231                           
  1232                           ;kbd4x3.c: 45:     PORTBbits.RB0 = 0;
  1233     06F0  1006               	bcf	6,0	;volatile
  1234                           
  1235                           ;kbd4x3.c: 46:     PORTBbits.RB1 = 1;
  1236     06F1  1486               	bsf	6,1	;volatile
  1237                           
  1238                           ;kbd4x3.c: 47:     PORTBbits.RB2 = 0;
  1239     06F2  1106               	bcf	6,2	;volatile
  1240                           
  1241                           ;kbd4x3.c: 48:     if(PORTBbits.RB4 == 1){
  1242     06F3  1E06               	btfss	6,4	;volatile
  1243     06F4  2EF6               	goto	u381
  1244     06F5  2EF7               	goto	u380
  1245     06F6                     u381:
  1246     06F6  2F11               	goto	l83
  1247     06F7                     u380:
  1248     06F7                     l896:
  1249                           
  1250                           ;kbd4x3.c: 49:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1251     06F7  300D               	movlw	13
  1252     06F8  00F1               	movwf	??_Keypad_Get_Char+1
  1253     06F9  30FB               	movlw	251
  1254     06FA  00F0               	movwf	??_Keypad_Get_Char
  1255     06FB                     u697:
  1256     06FB  0BF0               	decfsz	??_Keypad_Get_Char,f
  1257     06FC  2EFB               	goto	u697
  1258     06FD  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1259     06FE  2EFB               	goto	u697
  1260     06FF  2F00               	nop2
  1261     0700                     l84:	
  1262                           ;kbd4x3.c: 50:         while(PORTBbits.RB4 == 1);
  1263                           
  1264     0700  1283               	bcf	3,5	;RP0=0, select bank0
  1265     0701  1303               	bcf	3,6	;RP1=0, select bank0
  1266     0702  1A06               	btfsc	6,4	;volatile
  1267     0703  2F05               	goto	u391
  1268     0704  2F06               	goto	u390
  1269     0705                     u391:
  1270     0705  2F00               	goto	l84
  1271     0706                     u390:
  1272     0706                     l898:
  1273                           
  1274                           ;kbd4x3.c: 51:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1275     0706  3021               	movlw	33
  1276     0707  00F1               	movwf	??_Keypad_Get_Char+1
  1277     0708  3076               	movlw	118
  1278     0709  00F0               	movwf	??_Keypad_Get_Char
  1279     070A                     u707:
  1280     070A  0BF0               	decfsz	??_Keypad_Get_Char,f
  1281     070B  2F0A               	goto	u707
  1282     070C  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1283     070D  2F0A               	goto	u707
  1284     070E  0000               	nop
  1285                           
  1286                           ;kbd4x3.c: 52:         return '2';
  1287     070F  3032               	movlw	50
  1288     0710  2FE7               	goto	l70
  1289     0711                     l83:	
  1290                           ;kbd4x3.c: 53:     }
  1291                           
  1292                           
  1293                           ;kbd4x3.c: 54:     if(PORTBbits.RB5 == 1){
  1294     0711  1E86               	btfss	6,5	;volatile
  1295     0712  2F14               	goto	u401
  1296     0713  2F15               	goto	u400
  1297     0714                     u401:
  1298     0714  2F2F               	goto	l87
  1299     0715                     u400:
  1300     0715                     l902:
  1301                           
  1302                           ;kbd4x3.c: 55:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1303     0715  300D               	movlw	13
  1304     0716  00F1               	movwf	??_Keypad_Get_Char+1
  1305     0717  30FB               	movlw	251
  1306     0718  00F0               	movwf	??_Keypad_Get_Char
  1307     0719                     u717:
  1308     0719  0BF0               	decfsz	??_Keypad_Get_Char,f
  1309     071A  2F19               	goto	u717
  1310     071B  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1311     071C  2F19               	goto	u717
  1312     071D  2F1E               	nop2
  1313     071E                     l88:	
  1314                           ;kbd4x3.c: 56:         while(PORTBbits.RB5 == 1);
  1315                           
  1316     071E  1283               	bcf	3,5	;RP0=0, select bank0
  1317     071F  1303               	bcf	3,6	;RP1=0, select bank0
  1318     0720  1A86               	btfsc	6,5	;volatile
  1319     0721  2F23               	goto	u411
  1320     0722  2F24               	goto	u410
  1321     0723                     u411:
  1322     0723  2F1E               	goto	l88
  1323     0724                     u410:
  1324     0724                     l904:
  1325                           
  1326                           ;kbd4x3.c: 57:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1327     0724  3021               	movlw	33
  1328     0725  00F1               	movwf	??_Keypad_Get_Char+1
  1329     0726  3076               	movlw	118
  1330     0727  00F0               	movwf	??_Keypad_Get_Char
  1331     0728                     u727:
  1332     0728  0BF0               	decfsz	??_Keypad_Get_Char,f
  1333     0729  2F28               	goto	u727
  1334     072A  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1335     072B  2F28               	goto	u727
  1336     072C  0000               	nop
  1337                           
  1338                           ;kbd4x3.c: 58:         return '5';
  1339     072D  3035               	movlw	53
  1340     072E  2FE7               	goto	l70
  1341     072F                     l87:	
  1342                           ;kbd4x3.c: 59:     }
  1343                           
  1344                           
  1345                           ;kbd4x3.c: 60:     if(PORTBbits.RB6 == 1){
  1346     072F  1F06               	btfss	6,6	;volatile
  1347     0730  2F32               	goto	u421
  1348     0731  2F33               	goto	u420
  1349     0732                     u421:
  1350     0732  2F4D               	goto	l91
  1351     0733                     u420:
  1352     0733                     l908:
  1353                           
  1354                           ;kbd4x3.c: 61:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1355     0733  300D               	movlw	13
  1356     0734  00F1               	movwf	??_Keypad_Get_Char+1
  1357     0735  30FB               	movlw	251
  1358     0736  00F0               	movwf	??_Keypad_Get_Char
  1359     0737                     u737:
  1360     0737  0BF0               	decfsz	??_Keypad_Get_Char,f
  1361     0738  2F37               	goto	u737
  1362     0739  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1363     073A  2F37               	goto	u737
  1364     073B  2F3C               	nop2
  1365     073C                     l92:	
  1366                           ;kbd4x3.c: 62:         while(PORTBbits.RB6 == 1);
  1367                           
  1368     073C  1283               	bcf	3,5	;RP0=0, select bank0
  1369     073D  1303               	bcf	3,6	;RP1=0, select bank0
  1370     073E  1B06               	btfsc	6,6	;volatile
  1371     073F  2F41               	goto	u431
  1372     0740  2F42               	goto	u430
  1373     0741                     u431:
  1374     0741  2F3C               	goto	l92
  1375     0742                     u430:
  1376     0742                     l910:
  1377                           
  1378                           ;kbd4x3.c: 63:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1379     0742  3021               	movlw	33
  1380     0743  00F1               	movwf	??_Keypad_Get_Char+1
  1381     0744  3076               	movlw	118
  1382     0745  00F0               	movwf	??_Keypad_Get_Char
  1383     0746                     u747:
  1384     0746  0BF0               	decfsz	??_Keypad_Get_Char,f
  1385     0747  2F46               	goto	u747
  1386     0748  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1387     0749  2F46               	goto	u747
  1388     074A  0000               	nop
  1389                           
  1390                           ;kbd4x3.c: 64:         return '8';
  1391     074B  3038               	movlw	56
  1392     074C  2FE7               	goto	l70
  1393     074D                     l91:	
  1394                           ;kbd4x3.c: 65:     }
  1395                           
  1396                           
  1397                           ;kbd4x3.c: 66:     if(PORTBbits.RB7 == 1){
  1398     074D  1F86               	btfss	6,7	;volatile
  1399     074E  2F50               	goto	u441
  1400     074F  2F51               	goto	u440
  1401     0750                     u441:
  1402     0750  2F6B               	goto	l95
  1403     0751                     u440:
  1404     0751                     l914:
  1405                           
  1406                           ;kbd4x3.c: 67:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1407     0751  300D               	movlw	13
  1408     0752  00F1               	movwf	??_Keypad_Get_Char+1
  1409     0753  30FB               	movlw	251
  1410     0754  00F0               	movwf	??_Keypad_Get_Char
  1411     0755                     u757:
  1412     0755  0BF0               	decfsz	??_Keypad_Get_Char,f
  1413     0756  2F55               	goto	u757
  1414     0757  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1415     0758  2F55               	goto	u757
  1416     0759  2F5A               	nop2
  1417     075A                     l96:	
  1418                           ;kbd4x3.c: 68:         while(PORTBbits.RB7 == 1);
  1419                           
  1420     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1421     075B  1303               	bcf	3,6	;RP1=0, select bank0
  1422     075C  1B86               	btfsc	6,7	;volatile
  1423     075D  2F5F               	goto	u451
  1424     075E  2F60               	goto	u450
  1425     075F                     u451:
  1426     075F  2F5A               	goto	l96
  1427     0760                     u450:
  1428     0760                     l916:
  1429                           
  1430                           ;kbd4x3.c: 69:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1431     0760  3021               	movlw	33
  1432     0761  00F1               	movwf	??_Keypad_Get_Char+1
  1433     0762  3076               	movlw	118
  1434     0763  00F0               	movwf	??_Keypad_Get_Char
  1435     0764                     u767:
  1436     0764  0BF0               	decfsz	??_Keypad_Get_Char,f
  1437     0765  2F64               	goto	u767
  1438     0766  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1439     0767  2F64               	goto	u767
  1440     0768  0000               	nop
  1441                           
  1442                           ;kbd4x3.c: 70:         return '0';
  1443     0769  3030               	movlw	48
  1444     076A  2FE7               	goto	l70
  1445     076B                     l95:	
  1446                           ;kbd4x3.c: 71:     }
  1447                           
  1448                           
  1449                           ;kbd4x3.c: 73:     PORTBbits.RB0 = 0;
  1450     076B  1006               	bcf	6,0	;volatile
  1451                           
  1452                           ;kbd4x3.c: 74:     PORTBbits.RB1 = 0;
  1453     076C  1086               	bcf	6,1	;volatile
  1454                           
  1455                           ;kbd4x3.c: 75:     PORTBbits.RB2 = 1;
  1456     076D  1506               	bsf	6,2	;volatile
  1457                           
  1458                           ;kbd4x3.c: 76:     if(PORTBbits.RB4 == 1){
  1459     076E  1E06               	btfss	6,4	;volatile
  1460     076F  2F71               	goto	u461
  1461     0770  2F72               	goto	u460
  1462     0771                     u461:
  1463     0771  2F8C               	goto	l99
  1464     0772                     u460:
  1465     0772                     l920:
  1466                           
  1467                           ;kbd4x3.c: 77:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1468     0772  300D               	movlw	13
  1469     0773  00F1               	movwf	??_Keypad_Get_Char+1
  1470     0774  30FB               	movlw	251
  1471     0775  00F0               	movwf	??_Keypad_Get_Char
  1472     0776                     u777:
  1473     0776  0BF0               	decfsz	??_Keypad_Get_Char,f
  1474     0777  2F76               	goto	u777
  1475     0778  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1476     0779  2F76               	goto	u777
  1477     077A  2F7B               	nop2
  1478     077B                     l100:	
  1479                           ;kbd4x3.c: 78:         while(PORTBbits.RB4 == 1);
  1480                           
  1481     077B  1283               	bcf	3,5	;RP0=0, select bank0
  1482     077C  1303               	bcf	3,6	;RP1=0, select bank0
  1483     077D  1A06               	btfsc	6,4	;volatile
  1484     077E  2F80               	goto	u471
  1485     077F  2F81               	goto	u470
  1486     0780                     u471:
  1487     0780  2F7B               	goto	l100
  1488     0781                     u470:
  1489     0781                     l922:
  1490                           
  1491                           ;kbd4x3.c: 79:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1492     0781  3021               	movlw	33
  1493     0782  00F1               	movwf	??_Keypad_Get_Char+1
  1494     0783  3076               	movlw	118
  1495     0784  00F0               	movwf	??_Keypad_Get_Char
  1496     0785                     u787:
  1497     0785  0BF0               	decfsz	??_Keypad_Get_Char,f
  1498     0786  2F85               	goto	u787
  1499     0787  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1500     0788  2F85               	goto	u787
  1501     0789  0000               	nop
  1502                           
  1503                           ;kbd4x3.c: 80:         return '3';
  1504     078A  3033               	movlw	51
  1505     078B  2FE7               	goto	l70
  1506     078C                     l99:	
  1507                           ;kbd4x3.c: 81:     }
  1508                           
  1509                           
  1510                           ;kbd4x3.c: 82:     if(PORTBbits.RB5 == 1){
  1511     078C  1E86               	btfss	6,5	;volatile
  1512     078D  2F8F               	goto	u481
  1513     078E  2F90               	goto	u480
  1514     078F                     u481:
  1515     078F  2FAA               	goto	l103
  1516     0790                     u480:
  1517     0790                     l926:
  1518                           
  1519                           ;kbd4x3.c: 83:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1520     0790  300D               	movlw	13
  1521     0791  00F1               	movwf	??_Keypad_Get_Char+1
  1522     0792  30FB               	movlw	251
  1523     0793  00F0               	movwf	??_Keypad_Get_Char
  1524     0794                     u797:
  1525     0794  0BF0               	decfsz	??_Keypad_Get_Char,f
  1526     0795  2F94               	goto	u797
  1527     0796  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1528     0797  2F94               	goto	u797
  1529     0798  2F99               	nop2
  1530     0799                     l104:	
  1531                           ;kbd4x3.c: 84:         while(PORTBbits.RB5 == 1);
  1532                           
  1533     0799  1283               	bcf	3,5	;RP0=0, select bank0
  1534     079A  1303               	bcf	3,6	;RP1=0, select bank0
  1535     079B  1A86               	btfsc	6,5	;volatile
  1536     079C  2F9E               	goto	u491
  1537     079D  2F9F               	goto	u490
  1538     079E                     u491:
  1539     079E  2F99               	goto	l104
  1540     079F                     u490:
  1541     079F                     l928:
  1542                           
  1543                           ;kbd4x3.c: 85:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1544     079F  3021               	movlw	33
  1545     07A0  00F1               	movwf	??_Keypad_Get_Char+1
  1546     07A1  3076               	movlw	118
  1547     07A2  00F0               	movwf	??_Keypad_Get_Char
  1548     07A3                     u807:
  1549     07A3  0BF0               	decfsz	??_Keypad_Get_Char,f
  1550     07A4  2FA3               	goto	u807
  1551     07A5  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1552     07A6  2FA3               	goto	u807
  1553     07A7  0000               	nop
  1554                           
  1555                           ;kbd4x3.c: 86:         return '6';
  1556     07A8  3036               	movlw	54
  1557     07A9  2FE7               	goto	l70
  1558     07AA                     l103:	
  1559                           ;kbd4x3.c: 87:     }
  1560                           
  1561                           
  1562                           ;kbd4x3.c: 88:     if(PORTBbits.RB6 == 1){
  1563     07AA  1F06               	btfss	6,6	;volatile
  1564     07AB  2FAD               	goto	u501
  1565     07AC  2FAE               	goto	u500
  1566     07AD                     u501:
  1567     07AD  2FC8               	goto	l107
  1568     07AE                     u500:
  1569     07AE                     l932:
  1570                           
  1571                           ;kbd4x3.c: 89:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1572     07AE  300D               	movlw	13
  1573     07AF  00F1               	movwf	??_Keypad_Get_Char+1
  1574     07B0  30FB               	movlw	251
  1575     07B1  00F0               	movwf	??_Keypad_Get_Char
  1576     07B2                     u817:
  1577     07B2  0BF0               	decfsz	??_Keypad_Get_Char,f
  1578     07B3  2FB2               	goto	u817
  1579     07B4  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1580     07B5  2FB2               	goto	u817
  1581     07B6  2FB7               	nop2
  1582     07B7                     l108:	
  1583                           ;kbd4x3.c: 90:         while(PORTBbits.RB6 == 1);
  1584                           
  1585     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1586     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1587     07B9  1B06               	btfsc	6,6	;volatile
  1588     07BA  2FBC               	goto	u511
  1589     07BB  2FBD               	goto	u510
  1590     07BC                     u511:
  1591     07BC  2FB7               	goto	l108
  1592     07BD                     u510:
  1593     07BD                     l934:
  1594                           
  1595                           ;kbd4x3.c: 91:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1596     07BD  3021               	movlw	33
  1597     07BE  00F1               	movwf	??_Keypad_Get_Char+1
  1598     07BF  3076               	movlw	118
  1599     07C0  00F0               	movwf	??_Keypad_Get_Char
  1600     07C1                     u827:
  1601     07C1  0BF0               	decfsz	??_Keypad_Get_Char,f
  1602     07C2  2FC1               	goto	u827
  1603     07C3  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1604     07C4  2FC1               	goto	u827
  1605     07C5  0000               	nop
  1606                           
  1607                           ;kbd4x3.c: 92:         return '9';
  1608     07C6  3039               	movlw	57
  1609     07C7  2FE7               	goto	l70
  1610     07C8                     l107:	
  1611                           ;kbd4x3.c: 93:     }
  1612                           
  1613                           
  1614                           ;kbd4x3.c: 94:     if(PORTBbits.RB7 == 1){
  1615     07C8  1F86               	btfss	6,7	;volatile
  1616     07C9  2FCB               	goto	u521
  1617     07CA  2FCC               	goto	u520
  1618     07CB                     u521:
  1619     07CB  2FE6               	goto	l944
  1620     07CC                     u520:
  1621     07CC                     l938:
  1622                           
  1623                           ;kbd4x3.c: 95:         _delay((unsigned long)((2)*(20000000/4000.0)));
  1624     07CC  300D               	movlw	13
  1625     07CD  00F1               	movwf	??_Keypad_Get_Char+1
  1626     07CE  30FB               	movlw	251
  1627     07CF  00F0               	movwf	??_Keypad_Get_Char
  1628     07D0                     u837:
  1629     07D0  0BF0               	decfsz	??_Keypad_Get_Char,f
  1630     07D1  2FD0               	goto	u837
  1631     07D2  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1632     07D3  2FD0               	goto	u837
  1633     07D4  2FD5               	nop2
  1634     07D5                     l112:	
  1635                           ;kbd4x3.c: 96:         while(PORTBbits.RB7 == 1);
  1636                           
  1637     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1638     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1639     07D7  1B86               	btfsc	6,7	;volatile
  1640     07D8  2FDA               	goto	u531
  1641     07D9  2FDB               	goto	u530
  1642     07DA                     u531:
  1643     07DA  2FD5               	goto	l112
  1644     07DB                     u530:
  1645     07DB                     l940:
  1646                           
  1647                           ;kbd4x3.c: 97:         _delay((unsigned long)((5)*(20000000/4000.0)));
  1648     07DB  3021               	movlw	33
  1649     07DC  00F1               	movwf	??_Keypad_Get_Char+1
  1650     07DD  3076               	movlw	118
  1651     07DE  00F0               	movwf	??_Keypad_Get_Char
  1652     07DF                     u847:
  1653     07DF  0BF0               	decfsz	??_Keypad_Get_Char,f
  1654     07E0  2FDF               	goto	u847
  1655     07E1  0BF1               	decfsz	??_Keypad_Get_Char+1,f
  1656     07E2  2FDF               	goto	u847
  1657     07E3  0000               	nop
  1658                           
  1659                           ;kbd4x3.c: 98:         return '#';
  1660     07E4  3023               	movlw	35
  1661     07E5  2FE7               	goto	l70
  1662     07E6                     l944:
  1663                           
  1664                           ;kbd4x3.c: 100:     return 0;
  1665     07E6  3000               	movlw	0
  1666     07E7                     l70:
  1667     07E7  0008               	return
  1668     07E8                     __end_of_Keypad_Get_Char:
  1669     007E                     btemp	set	126	;btemp
  1670     007E                     wtemp0	set	126
  1671                           
  1672                           	psect	config
  1673                           
  1674                           ;Config register CONFIG @ 0x2007
  1675                           ;	Oscillator Selection bits
  1676                           ;	FOSC = HS, HS oscillator
  1677                           ;	Watchdog Timer Enable bit
  1678                           ;	WDTE = OFF, WDT disabled
  1679                           ;	Power-up Timer Enable bit
  1680                           ;	PWRTE = ON, PWRT enabled
  1681                           ;	Brown-out Reset Enable bit
  1682                           ;	BOREN = OFF, BOR disabled
  1683                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1684                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1685                           ;	Data EEPROM Memory Code Protection bit
  1686                           ;	CPD = OFF, Data EEPROM code protection off
  1687                           ;	Flash Program Memory Write Enable bits
  1688                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1689                           ;	In-Circuit Debugger Mode bit
  1690                           ;	DEBUG = 0x1, unprogrammed default
  1691                           ;	Flash Program Memory Code Protection bit
  1692                           ;	CP = OFF, Code protection off
  1693     2007                     	org	8199
  1694     2007  3F32               	dw	16178

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> claveIntroducida(BANK0[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> clave(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_strcmp

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     268
                                              5 COMMON     5     5      0
                    _Keypad_Get_Char
                        _Keypad_Init
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2     221
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Get_Char                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keypad_Get_Char
   _Keypad_Init
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jun 01 19:25:10 2024

                      pc 0002                       l50 0664                       l70 07E7  
                     l71 06B4                       l63 053D                       l80 06DF  
                     l72 06A3                       l66 0696                       l91 074D  
                     l83 0711                       l75 06D2                       l67 0685  
                     l92 073C                       l84 0700                       l76 06C1  
                     l95 076B                       l87 072F                       l79 06F0  
                     l96 075A                       l88 071E                       l99 078C  
                     fsr 0004                      l100 077B                      l103 07AA  
                    l112 07D5                      l104 0799                      l107 07C8  
                    l108 07B7                      l910 0742                      l902 0715  
                    l920 0772                      l904 0724                      l664 058F  
                    l922 0781                      l914 0751                      l940 07DB  
                    l932 07AE                      l916 0760                      l908 0733  
                    l934 07BD                      l926 0790                      l870 0673  
                    l950 0565                      l944 07E6                      l928 079F  
                    l880 06A9                      l872 067C                      l952 0569  
                    l938 07CC                      l890 06D6                      l874 068B  
                    l954 056D                      l970 0599                      l962 0590  
                    l892 06E5                      l884 06B8                      l868 0534  
                    l956 057A                      l948 0564                      l980 05AA  
                    l972 059A                      l964 0594                      l886 06C7  
                    l878 069A                      l958 0581                      l990 05C5  
                    l982 05AF                      l974 059C                      l966 0595  
                    l896 06F7                      l992 05CA                      l984 05B6  
                    l976 05A1                      l968 0596                      l898 0706  
                    l994 05CF                      l986 05BB                      l978 05A4  
                    l996 05D4                      l988 05C0                      l998 05D9  
                    u300 067C                      u301 067B                      u310 068B  
                    u311 068A                      u400 0715                      u320 069A  
                    u401 0714                      u321 0699                      u410 0724  
                    u330 06A9                      u411 0723                      u331 06A8  
                    u500 07AE                      u420 0733                      u340 06B8  
                    u501 07AD                      u421 0732                      u341 06B7  
                    u510 07BD                      u430 0742                      u350 06C7  
                    u511 07BC                      u431 0741                      u351 06C6  
                    u520 07CC                      u440 0751                      u360 06D6  
                    u521 07CB                      u441 0750                      u361 06D5  
                    u530 07DB                      u450 0760                      u370 06E5  
                    u531 07DA                      u451 075F                      u371 06E4  
                    u460 0772                      u380 06F7                      u540 057A  
                    u461 0771                      u381 06F6                      u541 0579  
                    u470 0781                      u390 0706                      u550 0581  
                    u471 0780                      u391 0705                      u551 0580  
                    u607 065C                      u480 0790                      u560 05AF  
                    u481 078F                      u617 0680                      u561 05AE  
                    u490 079F                      u570 0633                      u491 079E  
                    u707 070A                      u627 068F                      u571 0632  
                    u580 0652                      u717 0719                      u637 069E  
                    u581 0651                      u807 07A3                      u727 0728  
                    u647 06AD                      u575 062F                      u817 07B2  
                    u737 0737                      u657 06BC                      u827 07C1  
                    u747 0746                      u667 06CB                      u837 07D0  
                    u757 0755                      u677 06DA                      u597 0639  
                    u847 07DF                      u767 0764                      u687 06E9  
                    u777 0776                      u697 06FB                      u787 0785  
                    u797 0794                      fsr0 0004                      indf 0000  
                   l1000 05DE                     l1002 05E3                     l1010 05F2  
                   l1020 0652                     l1004 05E8                     l1012 0620  
                   l1030 066C                     l1022 0656                     l1006 05ED  
                   l1014 0626                     l1032 066D                     l1016 0633  
                   l1026 0669                     l1018 0644                     l1028 0669  
                   l1070 05FA                     _main 0590                     btemp 007E  
                   start 0000                    ?_main 0070            ??_Keypad_Init 0070  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  _clave 002D                    _tecla 007A                    main@i 0078  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_main 0673                   ??_main 0075  
    __end_of_Keypad_Init 053E                   _strcmp 0563  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 053E              _Keypad_Init 0534  
             __pbssBANK0 0032               __pmaintext 0590                  ?_strcmp 0070  
                __ptext1 0563                  __ptext2 0534                  __ptext3 0673  
                _display 0020     end_of_initialization 07FC        ??_Keypad_Get_Char 0070  
       _claveIntroducida 0032                  strcmp@l 0074                  strcmp@r 0070  
              _PORTBbits 0006                _PORTCbits 0007                _TRISBbits 0086  
           ?_Keypad_Init 0070           __end_of_strcmp 0590      start_initialization 07E8  
             init_fetch0 0550              __pdataBANK0 0020                 ??_strcmp 0072  
            __pbssCOMMON 007A                ___latbits 0002          _Keypad_Get_Char 0673  
             _ADCON1bits 009F  __end_of_Keypad_Get_Char 07E8                 init_ram0 0554  
       ?_Keypad_Get_Char 0070  
